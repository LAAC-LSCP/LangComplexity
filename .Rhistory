#adding a file with phonetic data
phon_data<- read_excel("C:/Users/Lenovo/Desktop/UNISI/ENS Traineeship/GIT/LangComplexityN/Data/LAAC_Internship2020_Languages.xlsx")
#MERGING TWO DATASETS TOGETHER
#select the columns to merge from the Languages file
mydata_sub <-phon_data %>% select(Language, Mad_C_inv_inv, Mad_VQ_inv_Inv, Maddieson_sylcomp)
mydata_sub$lang <- as.factor(mydata_sub$Language)
mydata_sub$Language <- NULL
#merge the selected columns into one dataset
mydata_sub<-merge(mydata,mydata_sub, by="lang") #it leaves only 83 children, apparently because of the absence metada for som languages
mydata_sub$Mad_syl_comp <- as.factor(mydata_sub$`Maddieson_sylcomp`)
mydata_sub$Mad_C_inv <- as.factor(mydata_sub$`Mad_C_inv_inv`)
mydata_sub$Mad_VQ_inv <- as.factor(mydata_sub$`Mad_VQ_inv_Inv`)
mydata_sub$syl_comp <- NULL
mydata_sub$Maddieson_sylcomp <- NULL
mydata_sub$Mad_C_inv_inv <- NULL
mydata_sub$Mad_VQ_inv_Inv <- NULL
#FINAL DATASET  ---------------------------------
summary(mydata_sub)
dim(mydata_sub)
#correct some data issues
mydata_sub$age2=mydata_sub$age^2 #generate squared component
mydata_sub$age3=mydata_sub$age^3 #generate cubic component
library(tidyverse)
library(ggplot2)
library(gvlma)
library(car)
library(RCurl)
library(plyr)
library(readxl)
##DATASETS WITH CR ---------------------------------
all_data<- read_excel("./Data/CR_by_child-updated_21_01.xlsx")
tsi_data<- read_excel("./Data/CR_by_child_tsi.xlsx") #why do we have a separate dataset for Tsimane?
tsi_data$...1 <- NULL #to drop an irrelevant column
all_data <- rbind.fill(all_data, tsi_data )#merging with tsi data
mydata  <- all_data
#definitions
mydata$gender <- as.factor(mydata$Gender)
mydata$age <- as.numeric(mydata$`Age in months`)
mydata$Age <- as.numeric(mydata$`Age`)
mydata$age <-  coalesce(mydata$age, mydata$Age) #combining age of both datasets
mydata <- mydata %>%
filter(age <= 40) #after this your data reduces to 120 observations (<40) which you care about.
mydata$CR <- as.numeric(mydata$CR)
#mydata$CR_A <- as.numeric(mydata$`CR Adults`) #irrelevant
mydata$lang <- as.factor(mydata$Language)
mydata$corp <- as.factor(mydata$corpus)
mydata$syl_comp <- as.factor(mydata$`Syllable complexity`)
mydata$C_count <- as.factor(mydata$C_count)
mydata$V_count <- as.factor(mydata$V_count)
#mydata$mult_lik <- as.factor(mydata$Multinlingualism_likelihood)
#lets drop anything irrelevant
mydata$ChildID <- NULL
mydata$`ITS` <- NULL
mydata$Multinlingualism_likelihood <- NULL
mydata$mult_lik <- NULL
mydata$`Syllable complexity` <- NULL
mydata$`Syllable.complexity` <- NULL
mydata$`Age in months` <- NULL
mydata$`Age` <- NULL
mydata$`CR Adults` <- NULL
mydata$Language <- NULL
mydata$Gender <- NULL
mydata$corpus <- NULL
#mydata$CR_A <- NULL
#DATASET WITH PHONETIC PROPERTIES ---------------------------------
#adding a file with phonetic data
phon_data<- read_excel("C:/Users/Lenovo/Desktop/UNISI/ENS Traineeship/GIT/LangComplexityN/Data/LAAC_Internship2020_Languages.xlsx")
#MERGING TWO DATASETS TOGETHER
#select the columns to merge from the Languages file
mydata_sub <-phon_data %>% select(Language, Mad_C_inv_inv, Mad_VQ_inv_Inv, Maddieson_sylcomp)
mydata_sub$lang <- as.factor(mydata_sub$Language)
mydata_sub$Language <- NULL
#merge the selected columns into one dataset
mydata_sub<-merge(mydata,mydata_sub, by="lang") #it leaves only 83 children, apparently because of the absence metada for som languages
library(tidyverse)
library(ggplot2)
library(gvlma)
library(car)
library(RCurl)
library(plyr)
library(readxl)
##DATASETS WITH CR ---------------------------------
all_data<- read_excel("./Data/CR_by_child-updated_21_01.xlsx")
tsi_data<- read_excel("./Data/CR_by_child_tsi.xlsx") #why do we have a separate dataset for Tsimane?
tsi_data$...1 <- NULL #to drop an irrelevant column
all_data <- rbind.fill(all_data, tsi_data )#merging with tsi data
mydata  <- all_data
#definitions
mydata$gender <- as.factor(mydata$Gender)
mydata$age <- as.numeric(mydata$`Age in months`)
mydata$Age <- as.numeric(mydata$`Age`)
mydata$age <-  coalesce(mydata$age, mydata$Age) #combining age of both datasets
mydata <- mydata %>%
filter(age <= 40) #after this your data reduces to 120 observations (<40) which you care about.
mydata$CR <- as.numeric(mydata$CR)
#mydata$CR_A <- as.numeric(mydata$`CR Adults`) #irrelevant
mydata$lang <- as.factor(mydata$Language)
mydata$corp <- as.factor(mydata$corpus)
mydata$syl_comp <- as.factor(mydata$`Syllable complexity`)
mydata$C_count <- as.factor(mydata$C_count)
mydata$V_count <- as.factor(mydata$V_count)
#mydata$mult_lik <- as.factor(mydata$Multinlingualism_likelihood)
#lets drop anything irrelevant
mydata$ChildID <- NULL
mydata$`ITS` <- NULL
mydata$Multinlingualism_likelihood <- NULL
mydata$mult_lik <- NULL
mydata$`Syllable complexity` <- NULL
mydata$`Syllable.complexity` <- NULL
mydata$`Age in months` <- NULL
mydata$`Age` <- NULL
mydata$`CR Adults` <- NULL
mydata$Language <- NULL
mydata$Gender <- NULL
mydata$corpus <- NULL
#mydata$CR_A <- NULL
#DATASET WITH PHONETIC PROPERTIES ---------------------------------
#adding a file with phonetic data
phon_data<- read_excel("C:/Users/Lenovo/Desktop/UNISI/ENS Traineeship/GIT/LangComplexityN/Data/LAAC_Internship2020_Languages.xlsx")
#MERGING TWO DATASETS TOGETHER
#select the columns to merge from the Languages file
mydata_sub <-phon_data %>% select(Language, Maddieson_C_inv, Maddieson_VQ_Inv, Maddieson_sylcomp)
mydata_sub$lang <- as.factor(mydata_sub$Language)
mydata_sub$Language <- NULL
#MERGING TWO DATASETS TOGETHER
#select the columns to merge from the Languages file
mydata_sub <-phon_data %>% select(Language, Maddieson_C_inv, Maddieson_VQ_Inv, Maddieson_sylcomp)
mydata_sub$lang <- as.factor(mydata_sub$Language)
mydata_sub$Language <- NULL
#merge the selected columns into one dataset
mydata_sub<-merge(mydata,mydata_sub, by="lang") #it leaves only 83 children, apparently because of the absence metada for som languages
mydata_sub$Mad_syl_comp <- as.factor(mydata_sub$`Maddieson_sylcomp`)
mydata_sub$Mad_C <- as.factor(mydata_sub$`Maddieson_C_inv`)
mydata_sub$Mad_VQ <- as.factor(mydata_sub$`Maddieson_VQ_Inv`)
mydata_sub$syl_comp <- NULL
mydata_sub$Maddieson_sylcomp <- NULL
mydata_sub$Mad_C_inv_inv <- NULL
mydata_sub$Mad_VQ_inv_Inv <- NULL
mydata_sub$Maddieson_C_inv <- NULL
mydata_sub$Maddieson_VQ_inv <- NULL
mydata_sub$Maddieson_VQ_Inv <- NULL
#correct some data issues
mydata_sub$age2=mydata_sub$age^2 #generate squared component
mydata_sub$age3=mydata_sub$age^3 #generate cubic component
mydata_sub<-subset(mydata_sub, !is.na(Mad_C))
View(mydata_sub)
ggplot(mydata_sub,aes(x=CR,fill=Mad_C))+
ggplot(mydata_sub,aes(x=CR,fill=Mad_C))+
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_C)
ggplot(mydata_sub,aes(x=CR,fill=Mad_C))+
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_C)
###Vowels #looks a bit better, but still average property is leading
ggplot(mydata_sub,aes(x=CR,fill=Mad_VQ))+
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_VQ)
mod_complexC=lm(CR~age*Mad_C+age2*Mad_C+age3*Mad_C,data=mydata_sub) #Consonants
mod_complexV=lm(CR~age*Mad_VQ+age2*Mad_VQ+age3*Mad_VQ,data=mydata_sub) #Vowels
gvlma(mod_complexC)
plot(mod_complexC)
View(mydata_sub)
gvlma(mod_complexV)
plot(mod_complexV)
mod_simpleC=lm(CR~age+Mad_C,data=mydata_sub)
anova(mod_complexC,mod_simpleC)
#Vowels
mod_simpleV=lm(CR~age+Mad_VQ,data=mydata_sub)
anova(mod_complexV,mod_simpleV)
# check whether it's simply due to age polynomials
mod_age=lm(CR~age+age2+age3,data=mydata_sub)
anova(mod_complexC,mod_age) #Consonants
anova(mod_complexV,mod_age) #Vowels
# check whether it's the interaction
#Consonants
mod_intC=lm(CR~age*Mad_C,data=mydata_sub)
anova(mod_complexC,mod_intC)
mod_intV=lm(CR~age*Mad_VQ,data=mydata_sub)
anova(mod_complexV,mod_intV)
# add back polynomials but without interaction
#Consonants
mod_int_ageC=lm(CR~age*Mad_C+age2+age3,data=mydata_sub)
anova(mod_complexC,mod_int_ageC)
mod_int_ageV=lm(CR~age*Mad_VQ+age2+age3,data=mydata_sub)
anova(mod_complexV,mod_int_ageV)
#Consonants
mod_int_ageC2=lm(CR~age*Mad_C+age2,data=mydata_sub)
anova(mod_int_ageC,mod_int_ageC2) #and age cube doesn't add anything either
#
#Vowels
mod_int_ageV2=lm(CR~age*Mad_VQ+age2,data=mydata_sub)
anova(mod_int_ageV,mod_int_ageV2)
#Consonants
mod_int_age2_intC=lm(CR~age*Mad_C+age2*Mad_C,data=mydata_sub)
anova(mod_complexC,mod_int_age2_intC) #ah note that the interaction age3*sylcomp wasn't adding anything
#Vowels
mod_int_age2_intV=lm(CR~age*Mad_VQ+age2*Mad_VQ,data=mydata_sub)
anova(mod_complexV,mod_int_age2_intV)
mod_int_ageV2=lm(CR~age*Mad_VQ+age2,data=mydata_sub)
anova(mod_int_ageV,mod_int_ageV2)
gvlma(mod_int_age2_intC)
plot(mod_int_age2_intC)
plot(mod_int_age2_intV)
gvlma(mod_int_age2_intV)
gvlma(mod_int_ageV)
plot(mod_int_ageV)
Anova(mod_int_age2_intC, type="III")
summary(mod_int_age2_intC)
Anova(mod_int_age2_intV, type="III")
summary(mod_int_age2_intV)
Anova(mod_int_age2_intV, type="III")
summary(mod_int_age2_intV)
Anova(mod_int_ageV, type="III") #still worse with an interaction
Anova(mod_int_age2_intV, type="III") #still worse with an interaction
summary(mod_int_age2_intV)
Anova(mod_int_ageV, type="III") #still worse with an interaction
Anova(mod_int_ageV, type="III") #still worse with an interaction
summary(mod_int_ageV)
Anova(mod_simpleC, type="III") #still worse with an interaction
Anova(mod_simpleC, type="III") #still worse with an interaction
summary(mod_simpleC)
mod_int_age_noTsiC=lm(CR~age*Mad_C+age2*Mad_C,data=mydata_sub,subset=c(corpus!="Tsimane"))
mod_int_age_noTsiC=lm(CR~age*Mad_C+age2*Mad_C,data=mydata_sub,subset=c(corp!="Tsimane"))
gvlma(mod_int_age_noTsiC)
plot(mod_int_age_noTsiC)
mod_int_age_noTsiV=lm(CR~age*Mad_VQ+age2*Mad_VQ,data=mydata_sub,subset=c(corp!="Tsimane"))
plot(mod_int_age_noTsiV)
gvlma(mod_int_age_noTsiV)
Anova(mod_int_age_noTsiC, type="III")
summary(mod_int_age_noTsiC)
Anova(mod_int_age_noTsiV, type="III")
summary(mod_int_age_noTsiV)
# plot data
#Consonants
ggplot(mydata_sub, aes(x=age, y=CR, color=Mad_C)) +
geom_point()+
# Add regression lines
# geom_smooth(method=lm)+
# Add loess lines
geom_smooth(span = 0.8)
#Vowels
ggplot(mydata_sub, aes(x=age, y=CR, color=Mad_VQ)) +
geom_point()+
# Add regression lines
# geom_smooth(method=lm)+
# Add loess lines
geom_smooth(span = 0.8)
# scale ages, so that intercept corresponds to mean age
mydata_sub$age.s=scale(mydata_sub$age)
mydata_sub$age2.s=scale(mydata_sub$age2)
mydata_sub$age3.s=scale(mydata_sub$age3)
mod_int_age_noTsi_ageScaledC=lm(CR~age.s*Mad_C+age2.s*Mad_C,data=mydata_sub,subset=c(corp!="Tsimane"))
plot(mod_int_age_noTsi_ageScaledC)
gvlma(mod_int_age_noTsi_ageScaledC)
Anova(mod_int_age_noTsi_ageScaledC, type="III")
summary(mod_int_age_noTsi_ageScaledC)
mod_int_age_noTsi_ageScaledV=lm(CR~age.s*Mad_VQ+age2.s*Mad_VQ,data=mydata_sub,subset=c(corp!="Tsimane"))
plot(mod_int_age_noTsi_ageScaledV)
gvlma(mod_int_age_noTsi_ageScaledV)
Anova(mod_int_age_noTsi_ageScaledV, type="III")
summary(mod_int_age_noTsi_ageScaledV)
mod_int_age_noTsi_ageScaled_no_oldC=lm(CR~age.s*Mad_C+age2.s*Mad_C,data=mydata_sub,
subset=c(corp!="Tsimane"&Age<40))
mod_int_age_noTsi_ageScaled_no_oldC=lm(CR~age.s*Mad_C+age2.s*Mad_C,data=mydata_sub,
subset=c(corp!="Tsimane"&age<40))
summary(mod_int_age_noTsi_ageScaled_no_oldC)
Anova(mod_int_age_noTsi_ageScaled_no_oldC, type="III")
gvlma(mod_int_age_noTsi_ageScaled_no_oldC) #checks ok
mod_int_age_noTsi_ageScaled_no_oldV=lm(CR~age.s*Mad_VQ+age2.s*Mad_VQ,data=mydata_sub,
subset=c(corp!="Tsimane"&age<40))
gvlma(mod_int_age_noTsi_ageScaled_no_oldV) #checks ok
Anova(mod_int_age_noTsi_ageScaled_no_oldV, type="III")
summary(mod_int_age_noTsi_ageScaled_no_oldV)
#Consonants
ggplot(mydata_sub, aes(x=age, y=CR, color=Mad_C)) +
geom_point()+
# Add regression lines
# geom_smooth(method=lm)+
# Add loess lines
geom_smooth(span = 0.8)
#Vowels
ggplot(mydata_sub, aes(x=age, y=CR, color=Mad_VQ)) +
geom_point()+
# Add regression lines
# geom_smooth(method=lm)+
# Add loess lines
geom_smooth(span = 0.8)
ggplot(mydata_sub, aes(x=age, y=CR, color=Mad_C, shape=Mad_C)) +
labs(title = "Distribution of CP wrt. Age (up to 40 months)")+
labs(colour = "Consonants", shape="Consonants")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
# Add loess lines
#geom_smooth(span = 0.8)
#Vowels
ggplot(mydata_sub, aes(x=age, y=CR, color=Mad_VQ, shape=Mad_VQ)) +
labs(title = "Distribution of CP wrt. Age (up to 40 months)")+
labs(colour = "Vowels", shape="Vowels")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
# Add loess lines
#geom_smooth(span = 0.8)
"Average CR"; mean(mydata_sub$CR) ; "Standard Deviation" ; sd(mydata_sub$CR)
#Histograms
hist(mydata_sub$CR,main="CR",xlab="CR") #quite normally distributed
###Consonants
hist(mydata_sub$CR[mydata_sub$Mad_C=="Moderately Small"],main="Consonants: Moderately Small",xlab="CR")
hist(mydata_sub$CR[mydata_sub$Mad_C=="Average"],main="Consonants: Average",xlab="CR")
hist(mydata_sub$CR[mydata_sub$Mad_C=="Moderately large"],main="Consonants: Moderately Large",xlab="CR") #doesn't look ok
###Vowels
hist(mydata_sub$CR[mydata_sub$Mad_VQ=="Average"],main="Vowels: Average",xlab="CR")
hist(mydata_sub$CR[mydata_sub$Mad_VQ=="Large"],main="Vowels: Large",xlab="CR")
"Average CR for Consonants:Moderately Small"; mean(mydata_sub$CR[mydata_sub$Mad_C == "Moderately Small"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_C == "Moderately Small"])
"Average CR"; mean(mydata_sub$CR) ; "Standard Deviation" ; sd(mydata_sub$CR)
"Average CR for Consonants: Average"; mean(mydata_sub$CR[mydata_sub$Mad_C == "Average"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub0$Mad_C == "Average"])
"Average CR for Consonants: Average"; mean(mydata_sub$CR[mydata_sub$Mad_C == "Average"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_C == "Average"])
"Average CR for Consonants: Moderately Large"; mean(mydata_sub$CR[mydata_sub$Mad_C == "Moderately Large"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_C == "Moderately Large"])
#Vowels
ggplot(mydata_sub, aes(x=age, y=CR, color=Mad_VQ, shape=Mad_VQ)) +
labs(title = "Distribution of CP wrt. Age (up to 40 months)")+
labs(colour = "Vowels", shape="Vowels")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
boxplot(mydata_sub$CR~mydata_sub$Mad_C, main="Distribution of CP by Consonants", xlab="Consonants", ylab="CP")
"Average CR for Vowels: Average"; mean(mydata_sub$CR[mydata_sub$Mad_V == "Average"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_V == "Average"])
"Average CR for Consonants: Large"; mean(mydata_sub$CR[mydata_sub$Mad_V == "Large"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_V == "Large"])
boxplot(mydata_sub$CR~mydata_sub$Mad_V, main="Distribution of CP by Vowels", xlab="Vowels", ylab="CP")
mydata_sub_S <- subset(mydata_sub,  Mad_C=="Small")
mydata_sub_A <- subset(mydata_sub,  Mad_C=="Average")
mydata_sub_L <- subset(mydata_sub,  Mad_C=="Moderately Large")
mydata_sub_S <- subset(mydata_sub,  Mad_C=="Small")
mydata_sub_A <- subset(mydata_sub,  Mad_C=="Average")
mydata_sub_L <- subset(mydata_sub,  Mad_C=="Moderately large")
mydata_sub_A <- subset(mydata_sub,  Mad_C=="Average")
mydata_sub_S <- subset(mydata_sub,  Mad_C=="Moderately Small")
mydata_sub_A <- subset(mydata_sub,  Mad_C=="Average")
mydata_sub_L <- subset(mydata_sub,  Mad_C=="Moderately large")
"Average CR for Consonants: Moderately Large"; mean(mydata_sub$CR[mydata_sub$Mad_C == "Moderately large"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_C == "Moderately large"])
"Moderately Small Mad_C"; cor.test(mydata_sub_S$Age,mydata_sub_S$CR) #0.7598376
"Average Mad_C"; cor.test(mydata_sub_A$Age,mydata_sub_A$CR) #0.3671603 Pretty low...
"Moderately large Mad_C"; cor.test(mydata_sub_L$Age,mydata_sub_L$CR) #0.7770199
"Moderately Small Mad_C"; cor.test(mydata_sub_S$age,mydata_sub_S$CR) #0.7598376
"Average Mad_C"; cor.test(mydata_sub_A$age,mydata_sub_A$CR) #0.3671603 Pretty low...
"Moderately large Mad_C"; cor.test(mydata_sub_L$age,mydata_sub_L$CR) #0.7770199
lm_Small <- lm(mydata_sub_S$CR~mydata_sub_S$age)
par(mfrow=c(2,2))
lm_Small <- lm(mydata_sub_S$CR~mydata_sub_S$age)
par(mfrow=c(2,2))
plot(lm_Small, main="Moderately Small Mad_C")
lm_Mod <- lm(mydata_sub_A$CR~mydata_sub_A$Age)
par(mfrow=c(2,2))
plot(lm_Mod, main="Average Mad_C")
#Average Mad_C
lm_Mod <- lm(mydata_sub_A$CR~mydata_sub_A$age)
par(mfrow=c(2,2))
plot(lm_Mod, main="Average Mad_C")
lm_High <- lm(mydata_sub_L$CR~mydata_sub_L$age)
par(mfrow=c(2,2))
plot(lm_High, main="Moderately large Mad_C")
lm_Avg <- lm(mydata_sub_A$CR~mydata_sub_A$age)
lm_large <- lm(mydata_sub_L$CR~mydata_sub_L$age)
#Small vs. Average
SvA <- subset(mydata_sub,  Mad_C!="Moderately large")
lm_SvA <- (lm(SvA$CR~SvA$age))
par(mfrow=c(2,2))
plot(lm_SvA, main="Small vs. Average")
"Small vs. Average"; anova(lm(SvA$CR~SvA$age*SvA$Mad_C))
#Average vs. Large
AvL <- subset(mydata_sub,  Mad_C!="Moderately Small")
lm_MvH <- (lm(AvL$CR~AvL$age))
par(mfrow=c(2,2))
plot(lm_AvL, main="Average vs. Large")
"Average vs. Large"; anova(lm(AvL$CR~AvL$age*AvL$Mad_C))
plot(lm_AvL, main="Average vs. Large")
AvL <- subset(mydata_sub,  Mad_C!="Moderately Small")
lm_AvL <- (lm(AvL$CR~AvL$age))
par(mfrow=c(2,2))
plot(lm_AvL, main="Average vs. Large")
"Average vs. Large"; anova(lm(AvL$CR~AvL$age*AvL$Mad_C))
#Small vs. Large
SvL <- subset(mydata_sub,  Mad_C!="Average")
lm_SvL <- (lm(SvL$CR~SvL$age))
par(mfrow=c(2,2))
plot(lm_SvL, main="Small vs. Large")
"Small vs. Large"; anova(lm(SvL$CR~SvL$age*SvL$Mad_C))
mydata_sub_Av <- subset(mydata_sub,  Mad_C=="Average")
mydata_sub_Lr <- subset(mydata_sub,  Mad_C=="Moderately large")
#Pearson's correlations for each Mad_V level
mydata_sub_Av <- subset(mydata_sub,  Mad_V=="Average")
mydata_sub_Lr <- subset(mydata_sub,  Mad_V=="Moderately large")
"Average Mad_C"; cor.test(mydata_sub_Av$age,mydata_sub_Av$CR) #0.6029925
"Moderately large Mad_C"; cor.test(mydata_sub_Lr$age,mydata_sub_Lr$CR) #0.2391876  Pretty low
mydata_sub_Av <- subset(mydata_sub,  Mad_V=="Average")
mydata_sub_Av <- subset(mydata_sub,  Mad_VQ=="Average")
mydata_sub_Lr <- subset(mydata_sub,  Mad_VQ=="Moderately large")
"Average Mad_V"; cor.test(mydata_sub_Av$age,mydata_sub_Av$CR) #0.6029925
"Large Mad_V"; cor.test(mydata_sub_Lr$age,mydata_sub_Lr$CR) #0.2391876  Pretty low
mydata_sub_Av <- subset(mydata_sub,  Mad_VQ=="Average")
mydata_sub_Lr <- subset(mydata_sub,  Mad_VQ=="Moderately large")
Average Mad_V"; cor.test(mydata_sub_Av$age,mydata_sub_Av$CR) #0.6029925
"Average Mad_VQ"; cor.test(mydata_sub_Av$age,mydata_sub_Av$CR)
par(mfrow=c(2,2))
"Large Mad_VQ"; cor.test(mydata_sub_Lr$age,mydata_sub_Lr$CR)
plot(lm_Avg, main="Average Mad_C")
#Average Mad_VQ
lm_Average <- lm(mydata_sub_Av$CR~mydata_sub_Av$age)
par(mfrow=c(2,2))
plot(lm_Average, main="Average Mad_VQ")
#Large Mad_VQ
plot(lm_large, main="Moderately large Mad_C") #looks quite bad
lm_lrg <- lm(mydata_sub_Lr$CR~mydata_sub_Lr$age)
par(mfrow=c(2,2))
plot(lm_lrg, main="Large Mad_VQ")
lm_lrg <- lm(mydata_sub_Lr$CR~mydata_sub_Lr$age)
mydata_sub_Lr <- subset(mydata_sub,  Mad_VQ=="Large")
"Large Mad_VQ"; cor.test(mydata_sub_Lr$age,mydata_sub_Lr$CR)  #not enough finite observations
lm_lrg <- lm(mydata_sub_Lr$CR~mydata_sub_Lr$age) #
par(mfrow=c(2,2))
plot(lm_lrg, main="Large Mad_VQ")
#Average vs. Large
AvvLr <- subset(mydata_sub)
lm_AvvLr <- (lm(AvvLr$CR~AvvLr$age))
par(mfrow=c(2,2))
plot(lm_AvvLr, main="Average vs. Large")
"Average vs. Large"; anova(lm(AvvLr$CR~AvvLr$age*AvvLr$Mad_VQ))
library(tidyverse)
library(tidyverse)
library(ggplot2)
library(gvlma)
library(car)
library(RCurl)
library(plyr)
library(readxl)
##DATASETS WITH CR ---------------------------------
all_data<- read_excel("./Data/CR_by_child-updated_21_01.xlsx")
tsi_data<- read_excel("./Data/CR_by_child_tsi.xlsx") #why do we have a separate dataset for Tsimane?
tsi_data$...1 <- NULL #to drop an irrelevant column
all_data <- rbind.fill(all_data, tsi_data )#merging with tsi data
mydata  <- all_data
#definitions
mydata$gender <- as.factor(mydata$Gender)
mydata$age <- as.numeric(mydata$`Age in months`)
mydata$Age <- as.numeric(mydata$`Age`)
mydata$age <-  coalesce(mydata$age, mydata$Age) #combining age of both datasets
mydata <- mydata %>%
filter(age <= 40) #after this your data reduces to 120 observations (<40) which you care about.
mydata$CR <- as.numeric(mydata$CR)
#mydata$CR_A <- as.numeric(mydata$`CR Adults`) #irrelevant
mydata$lang <- as.factor(mydata$Language)
mydata$corp <- as.factor(mydata$corpus)
mydata$syl_comp <- as.factor(mydata$`Syllable complexity`)
mydata$C_count <- as.factor(mydata$C_count)
mydata$V_count <- as.factor(mydata$V_count)
mydata$mult_lik <- as.factor(mydata$Multinlingualism_likelihood)
#lets drop anything irrelevant
mydata$ChildID <- NULL
mydata$`ITS` <- NULL
mydata$Multinlingualism_likelihood <- NULL
#mydata$mult_lik <- NULL
mydata$`Syllable complexity` <- NULL
mydata$`Syllable.complexity` <- NULL
mydata$`Age in months` <- NULL
mydata$`Age` <- NULL
mydata$`CR Adults` <- NULL
mydata$Language <- NULL
mydata$Gender <- NULL
mydata$corpus <- NULL
#mydata$CR_A <- NULL
#DATASET WITH PHONETIC PROPERTIES ---------------------------------
#adding a file with phonetic data
phon_data<- read_excel("C:/Users/Lenovo/Desktop/UNISI/ENS Traineeship/GIT/LangComplexityN/Data/LAAC_Internship2020_Languages.xlsx")
#MERGING TWO DATASETS TOGETHER
#select the columns to merge from the Languages file
mydata_sub <-phon_data %>% select(Language, Maddieson_C_inv, Maddieson_VQ_Inv, Maddieson_sylcomp)
mydata_sub$lang <- as.factor(mydata_sub$Language)
mydata_sub$Language <- NULL
#merge the selected columns into one dataset
mydata_sub<-merge(mydata,mydata_sub, by="lang", all=T) #it leaves only 83 children, apparently because of the absence metada for som languages
mydata_sub$Mad_syl_comp <- as.factor(mydata_sub$`Maddieson_sylcomp`)
mydata_sub$Mad_C <- as.factor(mydata_sub$`Maddieson_C_inv`)
mydata_sub$Mad_VQ <- as.factor(mydata_sub$`Maddieson_VQ_Inv`)
mydata_sub$syl_comp <- NULL
mydata_sub$Maddieson_sylcomp <- NULL
mydata_sub$Maddieson_C_inv <- NULL
mydata_sub$Maddieson_VQ_Inv <- NULL
View(mydata_sub)
install.packages(c("backports", "cachem", "dbplyr", "dplyr", "Matrix", "tibble"))
View(phon_data)
