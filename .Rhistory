#removed: corpus != "Warlaumont" & corpus != "Cychosz" & because we decided to include bilinguals
all_data->data.sub
#correct some data issues
data.sub$CR=as.numeric(gsub(",",".",data.sub$CR))
data.sub$SylComp=factor(data.sub$Syllable.complexity,levels=c("Low","Moderate","High"))
data.sub$Age=as.numeric(gsub(",",".",data.sub$Age.in.months))
data.sub$Age2=data.sub$Age^2 #generate squared component
data.sub$Age3=data.sub$Age^3 #generate cubic component
data.sub<-subset(data.sub, !is.na(SylComp))
# add more information
data.sub$coding<-ifelse(data.sub$corpus %in% c("Solomon","French"),"lab","citsci")
# describe data
table(data.sub$corpus)
#replot without kids over 40
data.sub_under40=subset(data.sub, Age<40 & corpus!="Warlaumont")
# plot data
ggplot(data.sub_under40, aes(x=Age, y=CR, color=SylComp, shape=SylComp)) +
labs(title = "Distribution of CP wrt. Age (up to 40 months)")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
# Add loess lines
#geom_smooth(span = 0.8)
library(tidyverse)
library(ggplot2)
library(gvlma)
library(car)
library(RCurl)
library(plyr)
docloc='https://docs.google.com/spreadsheets/d/e/2PACX-1vSzvJcT6yT9_fpRoFg5O7LAput7VKKltSxAuGMyC5wDlo_75D9ELA8YaVeMIVwcLw/pub?gid=1294110857&single=true&output=csv'
myfile <- getURL(docloc, ssl.verifyhost=FALSE, ssl.verifypeer=FALSE)
all_data<- read.csv(textConnection(myfile), header=T)
# if there is a new version of the data file, get it from here:
# https://docs.google.com/spreadsheets/d/1rhpTqgpv9VgsZOtoEHqxwShYrZIsbiB_/edit#gid=1860768761
#an error can be solved by using ";" or "," as a separator
all_data<- read.csv("./Data/CR_by_child-updated_3_08.xlsx - MAIN.csv", header=T,sep=";")
tsi_data<-read.csv("./Data/CR_by_child_tsi.csv",header=T)
names(tsi_data)[names(tsi_data) == "Age"] <- "Age.in.months"
all_data<-rbind.fill(all_data, tsi_data)
summary(all_data)
dim(all_data)
# apply exclusions
#data.sub <- subset(all_data,  Age_in_months<=50)
#removed: corpus != "Warlaumont" & corpus != "Cychosz" & because we decided to include bilinguals
all_data->data.sub
#correct some data issues
data.sub$CR=as.numeric(gsub(",",".",data.sub$CR))
data.sub$SylComp=factor(data.sub$Syllable.complexity,levels=c("Low","Moderate","High"))
data.sub$Age=as.numeric(gsub(",",".",data.sub$Age.in.months))
data.sub$Age2=data.sub$Age^2 #generate squared component
data.sub$Age3=data.sub$Age^3 #generate cubic component
data.sub<-subset(data.sub, !is.na(SylComp))
# add more information
data.sub$coding<-ifelse(data.sub$corpus %in% c("Solomon","French"),"lab","citsci")
# describe data
table(data.sub$corpus)
table(data.sub$Language) #shows N kids per language
table(data.sub$SylComp,data.sub$Language)  #notice that all the moderate data comes from Tsimane
#histograms
hist(data.sub$CR,main="CR",xlab="CR") #quite normally distributed
hist(data.sub$CR[data.sub$SylComp=="Low"],main="Low Syllable Complexity",xlab="CR") #looks ok
hist(data.sub$CR[data.sub$SylComp=="Moderate"],main="Moderate Syllable Complexity",xlab="CR")  #less good, quite flat
hist(data.sub$CR[data.sub$SylComp=="High"],main="High Syllable Complexity",xlab="CR") #idem
# plots
ggplot(data.sub,aes(x=CR,fill=SylComp))+
geom_histogram(bins=20,color="black") +
facet_grid(.~SylComp)
ggplot(data.sub, aes(x=Age, y=CR, color=Language)) +
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
#replot without kids over 40
data.sub_under40=subset(data.sub, Age<40 & corpus!="Warlaumont")
# plot data
ggplot(data.sub_under40, aes(x=Age, y=CR, color=SylComp, shape=SylComp)) +
labs(title = "Distribution of CP wrt. Age (up to 40 months)")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
# Add loess lines
#geom_smooth(span = 0.8)
library(tidyverse)
library(ggplot2)
library(gvlma)
library(car)
library(RCurl)
library(plyr)
library(readxl)
##DATASETS WITH CR ---------------------------------
all_data<- read_excel("./Data/CR_by_child-updated_21_01.xlsx")
tsi_data<- read_excel("./Data/CR_by_child_tsi.xlsx") #why do we have a separate dataset for Tsimane?
tsi_data$...1 <- NULL #to drop an irrelevant column
all_data <- rbind.fill(all_data, tsi_data )#merging with tsi data
mydata  <- all_data
#definitions
mydata$gender <- as.factor(mydata$Gender)
mydata$age <- as.numeric(mydata$`Age in months`)
mydata$Age <- as.numeric(mydata$`Age`)
mydata$age <-  coalesce(mydata$age, mydata$Age) #combining age of both datasets
mydata <- mydata %>%
filter(age <= 40) #after this your data reduces to 120 observations (<40) which you care about.
mydata$CR <- as.numeric(mydata$CR)
#mydata$CR_A <- as.numeric(mydata$`CR Adults`) #irrelevant
mydata$lang <- as.factor(mydata$Language)
mydata$corp <- as.factor(mydata$corpus)
mydata$syl_comp <- as.factor(mydata$`Syllable complexity`)
mydata$C_count <- as.factor(mydata$C_count)
mydata$V_count <- as.factor(mydata$V_count)
mydata$mult_lik <- as.factor(mydata$Multinlingualism_likelihood)
#lets drop anything irrelevant
mydata$ChildID <- NULL
mydata$`ITS` <- NULL
mydata$Multinlingualism_likelihood <- NULL
#mydata$mult_lik <- NULL
mydata$`Syllable complexity` <- NULL
mydata$`Syllable.complexity` <- NULL
mydata$`Age in months` <- NULL
mydata$`Age` <- NULL
mydata$`CR Adults` <- NULL
mydata$Language <- NULL
mydata$Gender <- NULL
mydata$corpus <- NULL
#mydata$CR_A <- NULL
#DATASET WITH PHONETIC PROPERTIES ---------------------------------
#adding a file with phonetic data
phon_data<- read_excel("C:/Users/Lenovo/Desktop/UNISI/ENS Traineeship/GIT/LangComplexity/Data/LAAC_Internship2020_Languages_upd.xlsx")
#MERGING TWO DATASETS TOGETHER
#select the columns to merge from the Languages file
mydata_sub <-phon_data %>% select(Language, Maddieson_C_inv, Maddieson_VQ_Inv, Maddieson_sylcomp)
mydata_sub$lang <- as.factor(mydata_sub$Language)
mydata_sub$Language <- NULL
#merge the selected columns into one dataset
mydata_sub<-merge(mydata,mydata_sub, by="lang", all=T) #it leaves only 83 children, apparently because of the absence metada for som languages THIS WAY DUPLICATE SOME DATA
mydata_sub <- dplyr::distinct(mydata_sub) # TO GET RID OF DUPLICATES
mydata_sub$Mad_syl_comp <- as.factor(mydata_sub$`Maddieson_sylcomp`)
mydata_sub$Mad_C <- as.factor(mydata_sub$`Maddieson_C_inv`)
mydata_sub$Mad_VQ <- as.factor(mydata_sub$`Maddieson_VQ_Inv`)
mydata_sub$syl_comp <- NULL
mydata_sub$Maddieson_sylcomp <- NULL
mydata_sub$Maddieson_C_inv <- NULL
mydata_sub$Maddieson_VQ_Inv <- NULL
mydata_sub<-subset(mydata_sub, !is.na(CR)) #to get rid of empty CR entries
View(mydata_sub)
#correct some data issues
mydata_sub$age2=mydata_sub$age^2 #generate squared component
mydata_sub$age3=mydata_sub$age^3 #generate cubic component
mydata_sub<-subset(mydata_sub, !is.na(Mad_C)) #NA are excluded -> 111 children
#mydata_sub$coding<-ifelse(mydata_sub$corp %in% c("Solomon","French"),"lab","citsci") # add more information
View(all_data)
library(tidyverse)
library(ggplot2)
library(gvlma)
library(car)
library(RCurl)
library(plyr)
library(readxl)
##DATASETS WITH CR ---------------------------------
all_data<- read_excel("./Data/CR_by_child-updated_21_01.xlsx")
tsi_data<- read_excel("./Data/CR_by_child_tsi.xlsx") #why do we have a separate dataset for Tsimane?
tsi_data$...1 <- NULL #to drop an irrelevant column
all_data <- rbind.fill(all_data, tsi_data )#merging with tsi data
mydata  <- all_data
#definitions
mydata$gender <- as.factor(mydata$Gender)
mydata$age <- as.numeric(mydata$`Age in months`)
mydata$Age <- as.numeric(mydata$`Age`)
mydata$age <-  coalesce(mydata$age, mydata$Age) #combining age of both datasets
mydata <- mydata %>%
filter(age <= 40) #after this your data reduces to 120 observations (<40) which you care about.
mydata$CR <- as.numeric(mydata$CR)
#mydata$CR_A <- as.numeric(mydata$`CR Adults`) #irrelevant
mydata$lang <- as.factor(mydata$Language)
mydata$corp <- as.factor(mydata$corpus)
mydata$syl_comp <- as.factor(mydata$`Syllable complexity`)
mydata$C_count <- as.factor(mydata$C_count)
mydata$V_count <- as.factor(mydata$V_count)
mydata$mult_lik <- as.factor(mydata$Multinlingualism_likelihood)
#lets drop anything irrelevant
mydata$ChildID <- NULL
mydata$`ITS` <- NULL
mydata$Multinlingualism_likelihood <- NULL
#mydata$mult_lik <- NULL
mydata$`Syllable complexity` <- NULL
mydata$`Syllable.complexity` <- NULL
mydata$`Age in months` <- NULL
mydata$`Age` <- NULL
mydata$`CR Adults` <- NULL
mydata$Language <- NULL
mydata$Gender <- NULL
mydata$corpus <- NULL
#mydata$CR_A <- NULL
#DATASET WITH PHONETIC PROPERTIES ---------------------------------
#adding a file with phonetic data
phon_data<- read_excel("C:/Users/Lenovo/Desktop/UNISI/ENS Traineeship/GIT/LangComplexity/Data/LAAC_Internship2020_Languages_upd.xlsx")
#MERGING TWO DATASETS TOGETHER
#select the columns to merge from the Languages file
mydata_sub <-phon_data %>% select(Language, Maddieson_C_inv, Maddieson_VQ_Inv, Maddieson_sylcomp)
mydata_sub$lang <- as.factor(mydata_sub$Language)
mydata_sub$Language <- NULL
#merge the selected columns into one dataset
mydata_sub<-merge(mydata,mydata_sub, by="lang", all=T) #it leaves only 83 children, apparently because of the absence metada for som languages THIS WAY DUPLICATE SOME DATA
mydata_sub <- dplyr::distinct(mydata_sub) # TO GET RID OF DUPLICATES
mydata_sub$Mad_syl_comp <- as.factor(mydata_sub$`Maddieson_sylcomp`)
mydata_sub$Mad_C <- as.factor(mydata_sub$`Maddieson_C_inv`)
mydata_sub$Mad_VQ <- as.factor(mydata_sub$`Maddieson_VQ_Inv`)
mydata_sub$syl_comp <- NULL
mydata_sub$Maddieson_sylcomp <- NULL
mydata_sub$Maddieson_C_inv <- NULL
mydata_sub$Maddieson_VQ_Inv <- NULL
mydata_sub<-subset(mydata_sub, !is.na(CR)) #to get rid of empty CR entries
#FINAL DATASET  ---------------------------------
summary(mydata_sub)
dim(mydata_sub)
#correct some data issues
mydata_sub$age2=mydata_sub$age^2 #generate squared component
mydata_sub$age3=mydata_sub$age^3 #generate cubic component
mydata_sub<-subset(mydata_sub, !is.na(Mad_C)) #NA are excluded -> 111 children
#mydata_sub$coding<-ifelse(mydata_sub$corp %in% c("Solomon","French"),"lab","citsci") # add more information
library(tidyverse)
library(ggplot2)
library(gvlma)
library(car)
library(RCurl)
library(plyr)
library(readxl)
##DATASETS WITH CR ---------------------------------
all_data<- read_excel("./Data/CR_by_child-updated_21_01.xlsx")
tsi_data<- read_excel("./Data/CR_by_child_tsi.xlsx") #why do we have a separate dataset for Tsimane?
tsi_data$...1 <- NULL #to drop an irrelevant column
all_data <- rbind.fill(all_data, tsi_data )#merging with tsi data
mydata  <- all_data
#definitions
mydata$gender <- as.factor(mydata$Gender)
mydata$age <- as.numeric(mydata$`Age in months`)
mydata$Age <- as.numeric(mydata$`Age`)
mydata$age <-  coalesce(mydata$age, mydata$Age) #combining age of both datasets
mydata <- mydata %>%
filter(age <= 40) #after this your data reduces to 120 observations (<40) which you care about.
mydata$CR <- as.numeric(mydata$CR)
#mydata$CR_A <- as.numeric(mydata$`CR Adults`) #irrelevant
mydata$lang <- as.factor(mydata$Language)
mydata$corp <- as.factor(mydata$corpus)
mydata$syl_comp <- as.factor(mydata$`Syllable complexity`)
mydata$C_count <- as.factor(mydata$C_count)
mydata$V_count <- as.factor(mydata$V_count)
mydata$mult_lik <- as.factor(mydata$Multinlingualism_likelihood)
#lets drop anything irrelevant
mydata$ChildID <- NULL
mydata$`ITS` <- NULL
mydata$Multinlingualism_likelihood <- NULL
#mydata$mult_lik <- NULL
mydata$`Syllable complexity` <- NULL
mydata$`Syllable.complexity` <- NULL
mydata$`Age in months` <- NULL
mydata$`Age` <- NULL
mydata$`CR Adults` <- NULL
mydata$Language <- NULL
mydata$Gender <- NULL
mydata$corpus <- NULL
#mydata$CR_A <- NULL
#DATASET WITH PHONETIC PROPERTIES ---------------------------------
#adding a file with phonetic data
phon_data<- read_excel("C:/Users/Lenovo/Desktop/UNISI/ENS Traineeship/GIT/LangComplexity/Data/LAAC_Internship2020_Languages_upd.xlsx")
#MERGING TWO DATASETS TOGETHER
#select the columns to merge from the Languages file
mydata_sub <-phon_data %>% select(Language, Maddieson_C_inv, Maddieson_VQ_Inv, Maddieson_sylcomp)
mydata_sub$lang <- as.factor(mydata_sub$Language)
mydata_sub$Language <- NULL
#merge the selected columns into one dataset
mydata_sub<-merge(mydata,mydata_sub, by="lang", all=T) #it leaves only 83 children, apparently because of the absence metada for som languages THIS WAY DUPLICATE SOME DATA
mydata_sub <- dplyr::distinct(mydata_sub) # TO GET RID OF DUPLICATES
mydata_sub$Mad_syl_comp <- as.factor(mydata_sub$`Maddieson_sylcomp`)
mydata_sub$Mad_C <- as.factor(mydata_sub$`Maddieson_C_inv`)
mydata_sub$Mad_VQ <- as.factor(mydata_sub$`Maddieson_VQ_Inv`)
mydata_sub$syl_comp <- NULL
mydata_sub$Maddieson_sylcomp <- NULL
mydata_sub$Maddieson_C_inv <- NULL
mydata_sub$Maddieson_VQ_Inv <- NULL
mydata_sub<-subset(mydata_sub, !is.na(CR)) #to get rid of empty CR entries
#FINAL DATASET  ---------------------------------
summary(mydata_sub)
dim(mydata_sub)
#correct some data issues
mydata_sub$age2=mydata_sub$age^2 #generate squared component
mydata_sub$age3=mydata_sub$age^3 #generate cubic component
mydata_sub<-subset(mydata_sub, !is.na(Mad_C)) #NA are excluded -> 111 children
#mydata_sub$coding<-ifelse(mydata_sub$corp %in% c("Solomon","French"),"lab","citsci") # add more information
table(mydata_sub$corp)
table
table(mydata_sub$lang) #shows N kids per language
table(mydata_sub$C_count,mydata_sub$lang) #Consonants
View(mydata_sub)
#just one more way of representing data
table(mydata_sub$lang,mydata_sub$C_count,mydata_sub$Mad_syl_comp) #Consonants
#Histograms
hist(mydata_sub$CR,main="CR",xlab="CR") #quite normally distributed
hist(mydata_sub$CR[mydata_sub$C_count],main="Consonant number and CR",xlab="CR") #Consonants
hist(mydata_sub$CR[mydata_sub$C_count],main="Consonant number and CR",xlab="CR") #Consonants
hist(mydata_sub$CR[mydata_sub$Mad_C],main="Consonant number and CR",xlab="CR") #
hist(mydata_sub$CR[mydata_sub$Mad_V],main="Consonant number and CR",xlab="CR") #
hist(mydata_sub$CR[mydata_sub$V_count],main="Vowels number and CR",xlab="CR") #Vowels
#dunno if the first two can be useful
ggplot(mydata_sub,aes(x=CR,fill=C_count))+      #Consonants
geom_histogram(bins=20,color="black") +
facet_grid(.~C_count)
ggplot(mydata_sub,aes(x=CR,fill=C_count))+      #Consonants
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_syl_comp)
ggplot(mydata_sub,aes(x=CR,fill=V_count))+      #Vowels
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_syl_comp)
ggplot(mydata_sub,aes(x=CR,fill=V_count))+      #Vowels
geom_histogram(bins=20,color="black") +
facet_grid(.~V_count)
#Plots
#dunno if the first two can be useful
ggplot(mydata_sub,aes(x=CR,fill=Mad_syl_comp))+      #Consonants
geom_histogram(bins=20,color="black") +
facet_grid(.~C_count)
ggplot(mydata_sub,aes(x=CR,fill=C_count, main="Distribution of CP by Vowels"))+      #Consonants
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_syl_comp)
ggplot(mydata_sub,aes(x=CR,fill=V_count))+      #Vowels
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_syl_comp)
ggplot(mydata_sub, aes(x=Age, y=CR, color=Language)) +
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
ggplot(mydata_sub, aes(x=age, y=CR, color=Language)) +
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
ggplot(mydata_sub, aes(x=age, y=CR, color=lang)) +
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
mod_complexC=lm(CR~age*C_count+age2*C_count+age3*C_count,data=mydata_sub) #Consonants
mod_complexV=lm(CR~age*V_count+age2*V_count+age3*V_count,data=mydata_sub) #Vowels
#check for assumptions
#Consonants
plot(mod_complexC)
gvlma(mod_complexC)
gvlma(mod_complexC)
#Vowels
plot(mod_complexV)
gvlma(mod_complexV)
#compare to simpler model ---------------------------------
#Consonants
mod_simpleC=lm(CR~age+C_count,data=mydata_sub)
anova(mod_complexC,mod_simpleC)
#Vowels
mod_simpleV=lm(CR~age+V_count,data=mydata_sub)
anova(mod_complexV,mod_simpleV)
# check whether it's the interaction ---------------------------------
#Consonants
mod_intC=lm(CR~age*C_count,data=mydata_sub)
anova(mod_complexC,mod_intC)
#Vowels
mod_intV=lm(CR~age*V_count,data=mydata_sub)
anova(mod_complexV,mod_intV)
# add back polynomials but without interaction ---------------------------------
#Consonants
mod_int_ageC=lm(CR~age*C_count+age2+age3,data=mydata_sub)
anova(mod_complexC,mod_int_ageC)
#Vowels
mod_int_ageV=lm(CR~age*V_count+age2+age3,data=mydata_sub)
anova(mod_complexV,mod_int_ageV)
#Consonants
mod_int_ageC2=lm(CR~age*C_count+age2,data=mydata_sub)
anova(mod_int_ageC,mod_int_ageC2) #and age cube doesn't add anything either
#Vowels
mod_int_ageV2=lm(CR~age*V_count+age2,data=mydata_sub)
anova(mod_int_ageV,mod_int_ageV2)
#Consonants
mod_int_age2_intC=lm(CR~age*C_count+age2*C_count,data=mydata_sub)
anova(mod_complexC,mod_int_age2_intC) #ah note that the interaction age3*sylcomp wasn't adding anything
#Vowels
mod_int_age2_intV=lm(CR~age*V_count+age2*V_count,data=mydata_sub)
anova(mod_complexV,mod_int_age2_intV)
par(mfrow=c(2,2))
plot(mod_int_age2_intC)
gvlma(mod_int_age2_intC)
par(mfrow=c(2,2))
plot(mod_int_age2_intV)
gvlma(mod_int_age2_intV)
par(mfrow=c(2,2))
plot(mod_int_ageC) #NaNs produced
gvlma(mod_int_ageC)  #ERROR in solve.default(sigwhat)
# So look at what it says
#Consonants
Anova(mod_int_age2_intC, type="III")
summary(mod_int_age2_intC)
par(mfrow=c(2,2))
plot(mod_mod_intC) #NaNs produced
par(mfrow=c(2,2))
plot(mod_intC) #NaNs produced
gvlma(mod_intC)  #ERROR in solve.default(sigwhat)
par(mfrow=c(2,2))
plot(mod_intV) #leverage looks bad
gvlma(mod_intV)  #ERROR in solve.default(sigwhat)
gvlma(mod_simpleC)  #ERROR in solve.default(sigwhat)
# So look at what it says
#Consonants
Anova(mod_int_age2_intC, type="III")
summary(mod_int_age2_intC)
# So look at what it says
#Consonants
Anova(mod_intC, type="III")
summary(mod_intC)
#Vowels
Anova(mod_intV, type="III")
summary(mod_intV)
#Consonants
mod_int_age_noTsiC=lm(CR~age*C_count+age2*C_count,data=mydata_sub,subset=c(corpus!="Tsimane"))
summary(mod_intC)
par(mfrow=c(2,2))
plot(mod_int_noTsiC)
gvlma(mod_int_noTsiC)
#Consonants
mod_int_noTsiC=lm(CR~age*C_count,data=mydata_sub,subset=c(corpus!="Tsimane"))
mod_int_noTsiC=lm(CR~age*C_count,data=mydata_sub,subset=c(corp!="Tsimane"))
par(mfrow=c(2,2))
plot(mod_int_noTsiC)
gvlma(mod_int_noTsiC)
mod_int_age_noTsiC=lm(CR~age*C_count+age2*C_count,data=mydata_sub,subset=c(corpus!="Tsimane"))
mod_int_age_noTsiC=lm(CR~age*C_count+age2*C_count,data=mydata_sub,subset=c(corp!="Tsimane"))
plot(mod_int_age_noTsiC)
gvlma(mod_int_age_noTsiC)
mod_int_noTsiV=lm(CR~age*V_count,data=mydata_sub,subset=c(corp!="Tsimane"))
par(mfrow=c(2,2))
plot(mod_int_noTsiV)
gvlma(mod_int_noTsiV)
mod_int_noTsiC=lm(CR~age*C_count,data=mydata_sub,subset=c(corp!="Tsimane"))
par(mfrow=c(2,2))
plot(mod_int_noTsiC)
gvlma(mod_int_noTsiC)
#Consonants
Anova(mod_int_noTsiC, type="III")
summary(mod_int_noTsiC)
#Vowels
Anova(mod_int_noTsiV, type="III")
summary(mod_int_noTsiV)
#Consonants
ggplot(mydata_sub, aes(x=age, y=CR, color=C_count)) +
geom_point()+
# Add regression lines
# geom_smooth(method=lm)+
# Add loess lines
geom_smooth(span = 0.8)
#Vowels
ggplot(mydata_sub, aes(x=age, y=CR, color=V_count)) +
geom_point()+
# Add regression lines
# geom_smooth(method=lm)+
# Add loess lines
geom_smooth(span = 0.8)
# scale ages, so that intercept corresponds to mean age ---------------------------------
mydata_sub$age.s=scale(mydata_sub$age)
mydata_sub$age2.s=scale(mydata_sub$age2)
mydata_sub$age3.s=scale(mydata_sub$age3)
# better control for ages... ---------------------------------
#Consonants
mod_int_noTsiC_ageScaledC=lm(CR~age.s*C_count+age2.s*C_count,data=mydata_sub,subset=c(corp!="Tsimane"))
par(mfrow=c(2,2))
plot(mod_int_noTsiC_ageScaledC)
gvlma(mod_int_noTsiC_ageScaledC)
Anova(mod_int_noTsiC_ageScaledC, type="III")
summary(mod_int_noTsiC_ageScaledC)
#Vowels
mod_int_age_noTsi_ageScaledV=lm(CR~age.s*V_count+age2.s*V_count,data=mydata_sub,subset=c(corp!="Tsimane"))
plot(mod_int_age_noTsi_ageScaledV)
Anova(mod_int_age_noTsi_ageScaledV, type="III")
summary(mod_int_age_noTsi_ageScaledV)
mod_int_noTsiV_ageScaledV=lm(CR~age.s*V_count+age2.s*V_count,data=mydata_sub,subset=c(corp!="Tsimane"))
par(mfrow=c(2,2))
plot(mod_int_noTsiV_ageScaledV)
gvlma(mod_int_noTsiV_ageScaledV)
Anova(mod_int_noTsiV_ageScaledV, type="III")
summary(mod_int_noTsiV_ageScaledV)
# plot data ---------------------------------
#Consonants
ggplot(mydata_sub_under40, aes(x=age, y=CR, color=C_count)) +
geom_point()+
# Add regression lines
# geom_smooth(method=lm)+
# Add loess lines
geom_smooth(span = 0.8)
ggplot(mydata_sub, aes(x=age, y=CR, color=C_count)) +
geom_point()+
# Add regression lines
# geom_smooth(method=lm)+
# Add loess lines
geom_smooth(span = 0.8)
