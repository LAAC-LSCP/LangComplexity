labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count_l10, y=CP, color=corpus , shape= corpus))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count_l10, y=CP, color=corpus , shape= corpus))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73","#c233dd", "#edf65a", "#f0af13", "#6813f0", "#0c0b0d" ))+
scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count_l10, y=CP, color=corpus , shape= corpus))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
# scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73","#c233dd", "#edf65a", "#f0af13", "#6813f0", "#0c0b0d" ))+
#scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count, y=CP, color=corpus , shape= corpus))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
# scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73","#c233dd", "#edf65a", "#f0af13", "#6813f0", "#0c0b0d" ))+
#scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
View(mydata_sub)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count, y=CP, color=corpus , shape= corpus))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
# scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73","#c233dd", "#edf65a", "#f0af13", "#6813f0", "#0c0b0d" ))+
#scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=0.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
2
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count, y=CP, color=corpus , shape= corpus))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
# scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73","#c233dd", "#edf65a", "#f0af13", "#6813f0", "#0c0b0d" ))+
#scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count_l10, y=CP, color=corpus , shape= corpus))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73","#c233dd", "#edf65a", "#f0af13", "#6813f0", "#0c0b0d" ))+
scale_shape_manual(values=c(4, 16, 0, 6, 18, 2, 8, 10))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count, y=CP, color=corpus , shape= corpus))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73","#c233dd", "#edf65a", "#f0af13", "#6813f0", "#0c0b0d" ))+
scale_shape_manual(values=c(4, 16, 0, 6, 18, 2, 8, 10))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count, y=CP))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
#scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73","#c233dd", "#edf65a", "#f0af13", "#6813f0", "#0c0b0d" ))+
# scale_shape_manual(values=c(4, 16, 0, 6, 18, 2, 8, 10))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count, y=CP, color=Mad_syl_comp , shape= Mad_syl_comp))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
read.csv("Data/best_data_clean_wLang.csv")->mydata_sub
mydata_sub$Mad_syl_comp <- factor(mydata_sub$Mad_syl_comp, levels=c("Low","Moderate","High"))
mydata_sub$Mad_C <- factor(mydata_sub$Mad_C, levels=c("Moderately Small","Average","Large","Moderately large"))
mydata_sub$Mad_VQ <-factor(mydata_sub$Mad_VQ, levels=c("Average","Large"))
summary(mydata_sub)
dim(mydata_sub)
#Histograms
hist(mydata_sub$CP,main="CP",xlab="CP")
#Plots
library("ggridges")
ggplot(mydata_sub,aes(x = age, y = Mad_syl_comp)) +
geom_density_ridges_gradient(aes(fill = ..x..), scale = 3, size = 0.3) +
scale_fill_gradientn(colours = c("#0D0887FF", "#CC4678FF", "#F0F921FF"),name = "Age")+
labs(x = "Age (months)")+
labs(y = "Syllable Complexity")+
labs(title = 'Distributinon of Syllable Complexity')
ggplot(mydata_sub,aes(x = CP, y = Mad_C)) +
geom_density_ridges_gradient(aes(fill = ..x..), scale = 3, size = 0.3) +
scale_fill_gradientn(colours = c("#0D0887FF", "#CC4678FF", "#F0F921FF"),name = "Age")+
labs(x = "Canonical Proportion")+
labs(y = "Consonants")+
labs(title = 'Distributinon of Consonants')
ggplot(mydata_sub,aes(x = CP, y = Mad_VQ)) +
geom_density_ridges_gradient(aes(fill = ..x..), scale = 3, size = 0.3) +
scale_fill_gradientn(colours = c("#0D0887FF", "#CC4678FF", "#F0F921FF"),name = "Age")+
labs(x = "Canonical Proportion")+
labs(y = "Vowels")+
labs(title = 'Distributinon of Vowels')
ggscatter(
mydata_sub, x = "CP", y = "age",
facet.by  = c("Mad_VQ", "Mad_syl_comp"),
short.panel.labs = FALSE
)+
stat_smooth(method = "loess", span = 0.9)
ggscatter(
mydata_sub, x = "CP", y = "age",
facet.by  = c("Mad_C", "Mad_syl_comp"),
short.panel.labs = FALSE
)+
stat_smooth(method = "loess", span = 0.9)
ggplot(mydata_sub, aes(x=age, y=CP, color=lang)) +
labs(colour = "Languages", shape="Languages") +
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
ggplot(mydata_sub, aes(x=age, y=CP, color=Mad_C, shape=Mad_C)) +
labs(title = "Distribution of CP wrt. Age (up to 40 months)")+
labs(colour = "Consonants", shape="Consonants")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
# scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
# scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
# Add loess lines
#geom_smooth(span = 0.8)
ggplot(mydata_sub, aes(x=age, y=CP, color=Mad_VQ, shape=Mad_VQ)) +
labs(title = "Distribution of CP wrt. Age (up to 40 months)")+
labs(colour = "Vowels", shape="Vowels")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
# Add loess lines
#geom_smooth(span = 0.8)
#1- a xyplot for CP predicted by (=as a function of) both age (x axis) and Mad_syl_comp (line types/colors)
ggplot(mydata_sub, aes(x=age, y=CP, color=Mad_syl_comp , shape= Mad_syl_comp)) +
labs(title = "Distribution of CP wrt. Age (up to 40 months)")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
# Add loess lines
#geom_smooth(span = 0.8)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count, y=CP, color=Mad_syl_comp , shape= Mad_syl_comp))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
cor(mydata_sub[,c("age" , "C_count" , "V_count")])
mydata_sub$Phon_count=mydata_sub$C_count+mydata_sub$V_count
cor(mydata_sub[,c("age" , "Phon_count")])
#hist(mydata_sub$Phon_count)
hist(log(mydata_sub$Phon_count,10))
mydata_sub$Phon_count_l10=log(mydata_sub$Phon_count,10)
ggplot(mydata_sub, aes(x = factor(Mad_syl_comp),y = Phon_count_l10, fill=Mad_syl_comp)) +
geom_boxjitter(color="black", jitter.color = "darkgrey", errorbar.draw = TRUE) +
scale_y_continuous() +
labs(title = "Distribution of Phon_count_l10 by Mad_syl_comp",
x = "",
y = "") +
theme_minimal() +
theme(legend.position = "none")
library(lme4)
lm_data <- lmer(CP ~ age + Phon_count_l10 + Mad_syl_comp + (1|lang), data = mydata_sub)
plot(lm_data)
summary(lm_data)
#read.csv("Data/best_data_clean_wLang.csv")->mydata_sub
mydata_sub$Mad_syl_comp <- factor(mydata_sub$Mad_syl_comp, levels=c("Low","Moderate","High"))
mydata_sub$Mad_C <- factor(mydata_sub$Mad_C, levels=c("Moderately Small","Average","Large","Moderately large"))
mydata_sub$Mad_VQ <-factor(mydata_sub$Mad_VQ, levels=c("Average","Large"))
summary(mydata_sub)
dim(mydata_sub)
#Histograms
hist(mydata_sub$CP,main="CP",xlab="CP")
#Plots
library("ggridges")
ggplot(mydata_sub,aes(x = age, y = Mad_syl_comp)) +
geom_density_ridges_gradient(aes(fill = ..x..), scale = 3, size = 0.3) +
scale_fill_gradientn(colours = c("#0D0887FF", "#CC4678FF", "#F0F921FF"),name = "Age")+
labs(x = "Age (months)")+
labs(y = "Syllable Complexity")+
labs(title = 'Distributinon of Syllable Complexity')
ggplot(mydata_sub,aes(x = CP, y = Mad_C)) +
geom_density_ridges_gradient(aes(fill = ..x..), scale = 3, size = 0.3) +
scale_fill_gradientn(colours = c("#0D0887FF", "#CC4678FF", "#F0F921FF"),name = "Age")+
labs(x = "Canonical Proportion")+
labs(y = "Consonants")+
labs(title = 'Distributinon of Consonants')
ggplot(mydata_sub,aes(x = CP, y = Mad_VQ)) +
geom_density_ridges_gradient(aes(fill = ..x..), scale = 3, size = 0.3) +
scale_fill_gradientn(colours = c("#0D0887FF", "#CC4678FF", "#F0F921FF"),name = "Age")+
labs(x = "Canonical Proportion")+
labs(y = "Vowels")+
labs(title = 'Distributinon of Vowels')
ggscatter(
mydata_sub, x = "CP", y = "age",
facet.by  = c("Mad_VQ", "Mad_syl_comp"),
short.panel.labs = FALSE
)+
stat_smooth(method = "loess", span = 0.9)
ggscatter(
mydata_sub, x = "CP", y = "age",
facet.by  = c("Mad_C", "Mad_syl_comp"),
short.panel.labs = FALSE
)+
stat_smooth(method = "loess", span = 0.9)
ggplot(mydata_sub, aes(x=age, y=CP, color=lang)) +
labs(colour = "Languages", shape="Languages") +
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
ggplot(mydata_sub, aes(x=age, y=CP, color=Mad_C, shape=Mad_C)) +
labs(title = "Distribution of CP wrt. Age (up to 40 months)")+
labs(colour = "Consonants", shape="Consonants")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
# scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
# scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
# Add loess lines
#geom_smooth(span = 0.8)
ggplot(mydata_sub, aes(x=age, y=CP, color=Mad_VQ, shape=Mad_VQ)) +
labs(title = "Distribution of CP wrt. Age (up to 40 months)")+
labs(colour = "Vowels", shape="Vowels")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
# Add loess lines
#geom_smooth(span = 0.8)
#1- a xyplot for CP predicted by (=as a function of) both age (x axis) and Mad_syl_comp (line types/colors)
ggplot(mydata_sub, aes(x=age, y=CP, color=Mad_syl_comp , shape= Mad_syl_comp)) +
labs(title = "Distribution of CP wrt. Age (up to 40 months)")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
# Add loess lines
#geom_smooth(span = 0.8)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count, y=CP, color=Mad_syl_comp , shape= Mad_syl_comp))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
# Add loess lines
#geom_smooth(span = 0.8)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count, y=CP, color=Mad_syl_comp))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
# scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count, y=CP, color=lang))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
#  scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
# scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count, y=CP, color=Mad_syl_comp))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
#  scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
# scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
ggplot(mydata_sub, aes(x=age, y=CP, color=Mad_syl_comp , shape= Mad_syl_comp)) +
labs(title = "Distribution of CP wrt. Age (up to 40 months)")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
# Add loess lines
#geom_smooth(span = 0.8)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count, y=CP, color=Mad_syl_comp))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
#  scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
# scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
# Add loess lines
#geom_smooth(span = 0.8)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
demo=subset(mydata_sub, lang!="Babatana", "Babatana and Senga")
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
demo=subset(mydata_sub, lang!="Babatana and Senga" & lang!="Babatana")
ggplot(demo, aes(x=Phon_count, y=CP, color=Mad_syl_comp))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
#  scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
# scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count, y=CP, color=Mad_syl_comp))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
#  scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
# scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count, y=CP, color=Mad_C))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
#  scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
# scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
#2- a xyplot for CP predicted by (=as a function of) Phon complexity
ggplot(mydata_sub, aes(x=Phon_count, y=CP, color=Mad_syl_comp))  +
labs(title = "Distribution of CP wrt. Phonological complexity")+
labs(colour = "Syllable Complexity", shape="Syllable Complexity")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
#  scale_color_manual(values=c("#E69F00", "#56B4E9", "#009E73"))+
# scale_shape_manual(values=c(4, 16, 0))+
labs(x = "Phonological complexity")+
labs(y = "CP")+
geom_point(size=2.5)+
# Add regression lines
geom_smooth(method=lm, se=FALSE)
