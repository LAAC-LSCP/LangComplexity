View(data.sub)
data.sub<-subset(data.sub, !is.na(SylComp)) #exclude NA
data.sub<-subset(data.sub, !is.na(C_count)) #exclude NA
data.sub<-subset(data.sub, !is.na(V_count)) #exclude NA
View(all_data)
View(data.sub)
# add more information
data.sub$coding<-ifelse(data.sub$corpus %in% c("Solomon","French"),"lab","citsci")
# describe data
table(data.sub$corpus)
table(data.sub$Language) #shows N kids per language
table(data.sub$SylComp,data.sub$Language)
table(data.sub$corpus)
table(data.sub$C_count.sub$Language)
table(data.sub$V_count.sub$Language)
View(all_data)
data.sub<-subset(data.sub, !is.na(C_count))
View(data.sub)
data.sub<-subset(data.sub, !is.na(V_count))
View(data.sub)
table(data.sub$corpus)
table(data.sub$Language) #shows N kids per language
table(data.sub$V_count.sub$Language)
View(all_data)
table(all_data$C_count,all_data$Language)
table(data.sub$corpus)
table(data.sub$Language)
able(data.sub$V_count.sub$SylComp)
table(data.sub$V_count.sub$SylComp)
table(data.sub$SylComp,data.sub$Language)
hist(data.sub$CR[data.sub$SylComp=="Low"],main="Low Syllable Complexity",xlab="CR") #looks ok
# plot data
ggplot(data.sub, aes(x=Age, y=CR, color=Language)) +
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
hist(data.sub$CR,main="CR",xlab="CR") #quite normally distributed
hist(data.sub$CR[data.sub$SylComp=="Low"],main="Low Syllable Complexity",xlab="CR") #looks ok
hist(data.sub$CR[data.sub$SylComp=="Moderate"],main="Moderate Syllable Complexity",xlab="CR")  #less good, quite flat
hist(data.sub$CR[data.sub$SylComp=="High"],main="High Syllable Complexity",xlab="CR") #idem
table(data.sub$C_count,data.sub$Language)
table(data.sub$SylComp,data.sub$Language)
table(data.sub$SylComp,data.sub$C_count)
able(data.sub$SylComp,data.sub$V_count)
table(data.sub$SylComp,data.sub$V_count)
table(data.sub$C_count,data.sub$Language)
table(data.sub$SylComp,data.sub$C_count,data.sub$Language)
table(data.sub$SylComp,data.sub$Language,data.sub$C_count)
table(data.sub$SylComp,data.sub$Language,data.sub$C_count)
table(data.sub$SylComp,data.sub$Language,data.sub$V_count)
table(data.sub$SylComp,data.sub$Language)
View(data.sub)
View(data.sub)
table(data.sub$corpus)
table(data.sub$Language)
table(data.sub$SylComp,data.sub$Language)
table(data.sub$SylComp,data.sub$Language,data.sub$C_count)
table(data.sub$V_count,data.sub$Language)
table(data.sub$V_count,data.sub$Language,data.sub$SylComp)
table(data.sub$V_count,data.sub$SylComp)
table(data.sub$Language,data.sub$V_count,data.sub$SylComp)
table(data.sub$SylComp,data.sub$V_count)
hist(data.sub$CR[data.sub$SylComp=="Low"],main="Low Syllable Complexity",xlab="CR") #looks ok
hist(data.sub$C_count[data.sub$SylComp=="Low"],main="Low Syllable Complexity",xlab="CR") #looks ok
hist(data.sub$C_count[data.sub$SylComp=="Moderate"],main="Moderate Syllable Complexity",xlab="CR")  #less good, quite flat
hist(data.sub$C_count[data.sub$SylComp=="High"],main="High Syllable Complexity",xlab="CR") #idem
View(all_data)
View(data.sub)
mod_complex=lm(CR~Age*C_count+Age2*C_count+Age3*C_count,data=data.sub)
#check for assumptions
plot(mod_complex) #looks pretty ok
describe(mod_complex)
summary(mod_complex)
print(mod_complex)
library(tidyverse)
library(ggplot2)
library(gvlma)
library(car)
library(RCurl)
docloc='https://docs.google.com/spreadsheets/d/e/2PACX-1vSzvJcT6yT9_fpRoFg5O7LAput7VKKltSxAuGMyC5wDlo_75D9ELA8YaVeMIVwcLw/pub?output=csv'
myfile <- getURL(docloc, ssl.verifyhost=FALSE, ssl.verifypeer=FALSE)
all_data<- read.csv(textConnection(myfile), header=T)
# if there is a new version of the data file, get it from here:
# https://docs.google.com/spreadsheets/d/1rhpTqgpv9VgsZOtoEHqxwShYrZIsbiB_/edit#gid=1860768761
#an error can be solved by using ";" or "," as a separator
all_data<- read.csv("./Data/CR_by_child.csv", header=T,sep=",")
View(all_data)
summary(all_data)
dim(all_data)
# apply exclusions
#data.sub <- subset(all_data,  Age_in_months<=50)
#removed: corpus != "Warlaumont" & corpus != "Cychosz" & because we decided to include bilinguals
all_data->data.sub
#correct some data issues
data.sub$CR=as.numeric(gsub(",",".",data.sub$CR))
#data.sub$SylComp=factor(data.sub$Syllable.complexity,levels=c("Low","Moderate","High"))
data.sub$Age=as.numeric(gsub(",",".",data.sub$Age.in.months))
data.sub$Age2=data.sub$Age^2 #generate squared component
data.sub$Age3=data.sub$Age^3 #generate cubic component
View(data.sub)
data.sub<-subset(data.sub, !is.na(C_count)) #exclude NA
data.sub<-subset(data.sub, !is.na(V_count)) #exclude NA
# add more information
data.sub$coding<-ifelse(data.sub$corpus %in% c("Solomon","French"),"lab","citsci")
table(data.sub$corpus)
table(data.sub$Language) #shows N kids per language
table(data.sub$Language,data.sub$C_count,data.sub$SylComp)
table(data.sub$SylComp,data.sub$C_count)
table(data.sub$SylComp,data.sub$V_count)
data.sub$SylComp=factor(data.sub$Syllable.complexity,levels=c("Low","Moderate","High"))
data.sub$Age=as.numeric(gsub(",",".",data.sub$Age.in.months))
data.sub$Age2=data.sub$Age^2 #generate squared component
data.sub$Age3=data.sub$Age^3 #generate cubic component
data.sub<-subset(data.sub, !is.na(SylComp)) #exclude NA
data.sub$SylComp=factor(data.sub$Syllable.complexity,levels=c("Low","Moderate","High"))
data.sub$Age=as.numeric(gsub(",",".",data.sub$Age.in.months))
data.sub$Age2=data.sub$Age^2 #generate squared component
data.sub$Age3=data.sub$Age^3 #generate cubic component
data.sub<-subset(data.sub, !is.na(SylComp)) #exclude NA
table(data.sub$corpus)
table(data.sub$Language) #shows N kids per language
table(data.sub$SylComp,data.sub$Language)  #notice that all the moderate data comes from Tsimane
table(data.sub$SylComp,data.sub$C_count)
table(data.sub$SylComp,data.sub$V_count)
table(data.sub$Language,data.sub$C_count,data.sub$SylComp)
table(data.sub$Language,data.sub$V_count,data.sub$SylComp)
table(data.sub$SylComp,data.sub$C_count)
table(data.sub$SylComp,data.sub$C_count)
table(data.sub$C_count,data.sub$Language)
table(data.sub$V_count,data.sub$Language)
hist(data.sub$CR[data.sub$C_count],main="Consonant number and CR",xlab="CR")
hist(data.sub$CR[data.sub$V_count],main="Consonant number and CR",xlab="CR")
hist(data.sub$CR,main="CR",xlab="CR") #quite normally distributed
table(data.sub$Language,data.sub$V_count,data.sub$SylComp)
ggplot(data.sub,aes(x=CR,fill=SylComp))+
geom_histogram(bins=20,color="black") +  ## note how color here changes the lines around the histogram
facet_grid(.~SylComp)  ## default is t
# plot data
ggplot(data.sub, aes(x=Age, y=CR, color=Language)) +
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
ggplot(data.sub,aes(x=CR,y=C_count, fill=SylComp))+
geom_histogram(bins=20,color="black") +
facet_grid(.~SylComp)
rlang::last_error()
ggplot(data.sub, aes(x=C_count, y=CR,  fill=SylComp))+
geom_histogram(bins=20,color="black") +
facet_grid(.~SylComp)
ggplot(data.sub,aes(x=CR,fill=SylComp))+
geom_histogram(bins=20,color="black") +
facet_grid(.~SylComp)
ggplot(data=data.sub,aes(y=CR,x=C_count,color=SylComp)) +
geom_point()
ggplot(data=data.sub,aes(y=C_count,x=CR,color=SylComp)) +
geom_point()
ggplot(data=data.sub,aes(y=SylComp,x=CR,color=C_count)) +
geom_point()
ggplot(data=data.sub,aes(y=CR,x=Frequency,color=SylComp)) +
geom_point()
ggplot(data=data.sub,aes(y=CR,x=Age,color=SylComp)) +
geom_point()
ggplot(data=data.sub,aes(x=C_count, y=CR, color=Language)) +
geom_point()
ggplot(data=data.sub,aes(x=V_count, y=CR, color=Language)) +
geom_point()
ggplot(data=data.sub,aes(x=Age, y=C_count, color=Language)) +
geom_point()
ggplot(data.sub,aes(y=CR,x=C_count,size=SylComp))+
geom_point(alpha=.1)
ggplot(data.sub,aes(y=V_count,x=C_count,size=SylComp))+
geom_point(alpha=.1)
ggplot(data.sub,aes(y=age,x=C_count,size=SylComp))+
geom_point(alpha=.1)
ggplot(data.sub,aes(y=Age,x=C_count,size=SylComp))+
geom_point(alpha=.1)
View(data.sub)
ggplot(data.sub,aes(x=CR,fill=C_count))+
geom_histogram(bins=20,color="black") +  ## note how color here changes the lines around the histogram
facet_grid(.~C_count)
ggplot(data.sub,aes(x=CR,fill=V_count))+
geom_histogram(bins=20,color="black") +  ## note how color here changes the lines around the histogram
facet_grid(.~V_count)
#dunno if the first two can be useful
ggplot(data.sub,aes(x=CR,fill=C_count))+ #Consonants
geom_histogram(bins=20,color="black") +
facet_grid(.~C_count)
ggplot(data.sub,aes(x=CR,fill=V_count))+ #Vowels
geom_histogram(bins=20,color="black") +
facet_grid(.~V_count)
hist(data.sub$CR[data.sub$C_count],main="Consonant number and CR",xlab="CR")
hist(data.sub$SylComp[data.sub$C_count],main="Consonant number and CR",xlab="CR")
hist(data.sub$SylComp[data.sub$C_count],main="Consonant number and CR",xlab="CR")
# plot data
ggplot(data.sub, aes(x=Age, y=CR, color=Language)) +
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
# plot data
ggplot(data.sub, aes(x=C_count, y=CR, color=Language)) +
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
# plot data
ggplot(data.sub, aes(x=CR, y=C_count, color=Language)) +
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
# plot data
ggplot(data.sub, aes(x=C_count, y=CR, color=Language)) +
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
ggplot(data.sub,aes(x=CR,fill=V_count))+      #Vowels
geom_histogram(bins=20,color="black") +
facet_grid(.~V_count)
# plot data
ggplot(data.sub, aes(x=Language, y=CR, color=C_count)) +
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
# plot data
ggplot(data.sub, aes(x=CR, y=Language, color=C_count)) +
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
# plot data
ggplot(data.sub, aes(x=SylComp, y=Language, color=C_count)) +
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
# plot data
ggplot(data.sub, aes(x=C_count, y=SylComp, color=Language)) +
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
# plot data
ggplot(data.sub, aes(x=SylComp, y=C_count, color=Language)) +
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
# plot data
ggplot(data.sub, aes(x=Age, y=CR, color=Language)) +
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
mod_complex=lm(CR~Age*C_count+Age2*C_count+Age3*C_count,data=data.sub) #Consonants
mod_complex=lm(CR~Age*V_count+Age2*V_count+Age3*V_count,data=data.sub) #Vowels
mod_complex_C=lm(CR~Age*C_count+Age2*C_count+Age3*C_count,data=data.sub) #Consonants
mod_complex_V=lm(CR~Age*V_count+Age2*V_count+Age3*V_count,data=data.sub) #Vowels
View(mod_complex)
View(mod_complex)
View(mod_complex)
mod_complexC=lm(CR~Age*C_count+Age2*C_count+Age3*C_count,data=data.sub) #Consonants
mod_complexV=lm(CR~Age*V_count+Age2*V_count+Age3*V_count,data=data.sub) #Vowels
plot(mod_complexC) #looks pretty ok
library(tidyverse)
library(ggplot2)
library(gvlma)
library(car)
library(RCurl)
docloc='https://docs.google.com/spreadsheets/d/e/2PACX-1vSzvJcT6yT9_fpRoFg5O7LAput7VKKltSxAuGMyC5wDlo_75D9ELA8YaVeMIVwcLw/pub?output=csv'
myfile <- getURL(docloc, ssl.verifyhost=FALSE, ssl.verifypeer=FALSE)
all_data<- read.csv(textConnection(myfile), header=T)
# if there is a new version of the data file, get it from here:
# https://docs.google.com/spreadsheets/d/1rhpTqgpv9VgsZOtoEHqxwShYrZIsbiB_/edit#gid=1860768761
#an error can be solved by using ";" or "," as a separator
all_data<- read.csv("./Data/CR_by_child.csv", header=T,sep=",")
summary(all_data)
dim(all_data)
# apply exclusions
#data.sub <- subset(all_data,  Age_in_months<=50)
#removed: corpus != "Warlaumont" & corpus != "Cychosz" & because we decided to include bilinguals
all_data->data.sub
#correct some data issues
data.sub$CR=as.numeric(gsub(",",".",data.sub$CR))
data.sub$SylComp=factor(data.sub$Syllable.complexity,levels=c("Low","Moderate","High"))
data.sub$Age=as.numeric(gsub(",",".",data.sub$Age.in.months))
data.sub$Age2=data.sub$Age^2 #generate squared component
data.sub$Age3=data.sub$Age^3 #generate cubic component
data.sub<-subset(data.sub, !is.na(SylComp)) #exclude NA
data.sub<-subset(data.sub, !is.na(C_count)) #exclude NA in Consonants
data.sub<-subset(data.sub, !is.na(V_count)) #exclude NA Vowels
# add more information
data.sub$coding<-ifelse(data.sub$corpus %in% c("Solomon","French"),"lab","citsci")
# describe data
table(data.sub$corpus)
table(data.sub$Language) #shows N kids per language
table(data.sub$C_count,data.sub$Language) #Consonants
table(data.sub$V_count,data.sub$Language) #Vowels
#just one more way of representing data
table(data.sub$Language,data.sub$C_count,data.sub$SylComp) #Consonants
table(data.sub$Language,data.sub$V_count,data.sub$SylComp) #Vowels
#histograms
hist(data.sub$CR,main="CR",xlab="CR") #quite normally distributed
hist(data.sub$CR[data.sub$C_count],main="Consonant number and CR",xlab="CR") #Consonants
hist(data.sub$CR[data.sub$V_count],main="Consonant number and CR",xlab="CR") #Vowels
#plots
#dunno if the first two can be useful
ggplot(data.sub,aes(x=CR,fill=C_count))+      #Consonants
geom_histogram(bins=20,color="black") +
facet_grid(.~C_count)
ggplot(data.sub,aes(x=CR,fill=V_count))+      #Vowels
geom_histogram(bins=20,color="black") +
facet_grid(.~V_count)
ggplot(data.sub, aes(x=Age, y=CR, color=Language)) +
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
# Fit most complex models
mod_complexC=lm(CR~Age*C_count+Age2*C_count+Age3*C_count,data=data.sub) #Consonants
mod_complexV=lm(CR~Age*V_count+Age2*V_count+Age3*V_count,data=data.sub) #Vowels
#check for assumptions
#Consonants
plot(mod_complexC)
gvlma(mod_complexV)
#compare to simpler model
#Consonants
mod_simpleC=lm(CR~Age+C_count,data=data.sub)
anova(mod_complexC,mod_simpleC)
mod_simpleV=lm(CR~Age+V_count,data=data.sub)
anova(mod_complexV,mod_simpleV)
mod_age=lm(CR~Age+Age2+Age3,data=data.sub)
anova(mod_complexC,mod_age) #Consonants
anova(mod_complexV,mod_age) #Vowels
mod_int=lm(CR~Age*C_count,data=data.sub)
anova(mod_complexC,mod_int)
#Consonants
mod_int_age=lm(CR~Age*C_count+Age2+Age3,data=data.sub)
anova(mod_complexC,mod_int_age)
#Vowels
mod_int_age=lm(CR~Age*V_count+Age2+Age3,data=data.sub)
anova(mod_complexV,mod_int_age)
library(tidyverse)
library(ggplot2)
library(gvlma)
library(car)
library(RCurl)
docloc='https://docs.google.com/spreadsheets/d/e/2PACX-1vSzvJcT6yT9_fpRoFg5O7LAput7VKKltSxAuGMyC5wDlo_75D9ELA8YaVeMIVwcLw/pub?output=csv'
myfile <- getURL(docloc, ssl.verifyhost=FALSE, ssl.verifypeer=FALSE)
all_data<- read.csv(textConnection(myfile), header=T)
# if there is a new version of the data file, get it from here:
# https://docs.google.com/spreadsheets/d/1rhpTqgpv9VgsZOtoEHqxwShYrZIsbiB_/edit#gid=1860768761
#an error can be solved by using ";" or "," as a separator
all_data<- read.csv("./Data/CR_by_child.csv", header=T,sep=",")
summary(all_data)
dim(all_data)
# apply exclusions
#data.sub <- subset(all_data,  Age_in_months<=50)
#removed: corpus != "Warlaumont" & corpus != "Cychosz" & because we decided to include bilinguals
all_data->data.sub
#correct some data issues
data.sub$CR=as.numeric(gsub(",",".",data.sub$CR))
data.sub$SylComp=factor(data.sub$Syllable.complexity,levels=c("Low","Moderate","High"))
data.sub$Age=as.numeric(gsub(",",".",data.sub$Age.in.months))
data.sub$Age2=data.sub$Age^2 #generate squared component
data.sub$Age3=data.sub$Age^3 #generate cubic component
data.sub<-subset(data.sub, !is.na(SylComp)) #exclude NA
data.sub<-subset(data.sub, !is.na(C_count)) #exclude NA in Consonants
data.sub<-subset(data.sub, !is.na(V_count)) #exclude NA Vowels
# add more information
data.sub$coding<-ifelse(data.sub$corpus %in% c("Solomon","French"),"lab","citsci")
# describe data
table(data.sub$corpus)
table(data.sub$Language) #shows N kids per language
table(data.sub$C_count,data.sub$Language) #Consonants
table(data.sub$V_count,data.sub$Language) #Vowels
#just one more way of representing data
table(data.sub$Language,data.sub$C_count,data.sub$SylComp) #Consonants
table(data.sub$Language,data.sub$V_count,data.sub$SylComp) #Vowels
#histograms
hist(data.sub$CR,main="CR",xlab="CR") #quite normally distributed
hist(data.sub$CR[data.sub$C_count],main="Consonant number and CR",xlab="CR") #Consonants
hist(data.sub$CR[data.sub$V_count],main="Consonant number and CR",xlab="CR") #Vowels
#plots
#dunno if the first two can be useful
ggplot(data.sub,aes(x=CR,fill=C_count))+      #Consonants
geom_histogram(bins=20,color="black") +
facet_grid(.~C_count)
ggplot(data.sub,aes(x=CR,fill=V_count))+      #Vowels
geom_histogram(bins=20,color="black") +
facet_grid(.~V_count)
ggplot(data.sub, aes(x=Age, y=CR, color=Language)) +
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
# Fit most complex models
mod_complexC=lm(CR~Age*C_count+Age2*C_count+Age3*C_count,data=data.sub) #Consonants
mod_complexV=lm(CR~Age*V_count+Age2*V_count+Age3*V_count,data=data.sub) #Vowels
#check for assumptions
#Consonants
plot(mod_complexC)
#compare to simpler model
#Consonants
mod_simpleC=lm(CR~Age+C_count,data=data.sub)
anova(mod_complexC,mod_simpleC)
#Vowels
mod_simpleV=lm(CR~Age+V_count,data=data.sub)
anova(mod_complexV,mod_simpleV)
# check whether it's simply due to age polynomials
mod_age=lm(CR~Age+Age2+Age3,data=data.sub)
anova(mod_complexC,mod_age) #Consonants
anova(mod_complexV,mod_age) #Vowels
# check whether it's the interaction
#Consonants
mod_intC=lm(CR~Age*C_count,data=data.sub)
anova(mod_complexC,mod_intC)
#Vowels
mod_intV=lm(CR~Age*V_count,data=data.sub)
anova(mod_complexV,mod_intV)
#NOTE! This changed with more data
# I first thought it seems so, because the more complex model is only marginally better than this simpler one, with interaction
#but now the more complex model is sig better than this simpler one
# add back polynomials but without interaction
#Consonants
mod_int_ageC=lm(CR~Age*C_count+Age2+Age3,data=data.sub)
anova(mod_complexC,mod_int_ageC)
#Vowels
mod_int_ageV=lm(CR~Age*V_count+Age2+Age3,data=data.sub)
anova(mod_complexV,mod_int_ageV)
#NOTE: this also changed with more data
# originally I thought model with interactions on all the polyn terms is no better
# but now it is
#Consonants
mod_int_ageC2=lm(CR~Age*C_count+Age2,data=data.sub)
anova(mod_int_ageC,mod_int_ageC2) #and age cube doesn't add anything either
#Vowels
mod_int_ageV2=lm(CR~Age*V_count+Age2,data=data.sub)
anova(mod_int_ageV,mod_int_ageV2)
#this hasn't changed-- age cube didn't help
#Consonants
mod_int_age2_intC=lm(CR~Age*C_count+Age2*C_count,data=data.sub)
anova(mod_complexC,mod_int_age2_intC) #ah note that the interaction age3*sylcomp wasn't adding anything
#Vowels
mod_int_age2_intV=lm(CR~Age*V_count+Age2*V_count,data=data.sub)
anova(mod_complexV,mod_int_age2_intV)
plot(mod_int_age2_intC)
plot(mod_int_age2_intV)
#check for assumptions in this new winning model
#Consonants
plot(mod_int_age2_intC)
#Vowels
Anova(mod_int_age2_intV, type="III")
summary(mod_int_age2_intV)
#Consonants
mod_int_age_noTsiC=lm(CR~Age*C_count+Age2*C_count,data=data.sub,subset=c(corpus!="Tsimane"))
plot(mod_int_age_noTsiC)
# plot data
ggplot(data.sub, aes(x=Age, y=CR, color=SylComp)) +
geom_point()+
# Add regression lines
# geom_smooth(method=lm)+
# Add loess lines
geom_smooth(span = 0.8)
# plot data
ggplot(data.sub, aes(x=Age, y=CR, color=C_count)) +
geom_point()+
# Add regression lines
# geom_smooth(method=lm)+
# Add loess lines
geom_smooth(span = 0.8)
# scale ages, so that intercept corresponds to mean age
data.sub$Age.s=scale(data.sub$Age)
data.sub$Age2.s=scale(data.sub$Age2)
data.sub$Age3.s=scale(data.sub$Age3)
#Consonants
mod_int_age_noTsi_ageScaledC=lm(CR~Age.s*C_count+Age2.s*C_count,data=data.sub,subset=c(corpus!="Tsimane"))
plot(mod_int_age_noTsi_ageScaledC)
plot(mod_int_age_noTsi_ageScaledV)
gvlma(mod_int_age_noTsi_ageScaledV)
Anova(mod_int_age_noTsi_ageScaledV, type="III")
summary(mod_int_age_noTsi_ageScaledV)
#Consonants
mod_int_age_noTsi_ageScaledC=lm(CR~Age.s*C_count+Age2.s*C_count,data=data.sub,subset=c(corpus!="Tsimane"))
plot(mod_int_age_noTsi_ageScaledC)
plot(mod_int_age_noTsi_ageScaledV)
gvlma(mod_int_age_noTsi_ageScaledV)
Anova(mod_int_age_noTsi_ageScaledV, type="III")
summary(mod_int_age_noTsi_ageScaledV)
plot(mod_int_age_noTsi_ageScaledV)
mod_int_age_noTsi_ageScaledV=lm(CR~Age.s*V_count+Age2.s*V_count,data=data.sub,subset=c(corpus!="Tsimane"))
plot(mod_int_age_noTsi_ageScaledV)
subset=c(corpus!="Tsimane"&Age<40))
plot(mod_int_age_noTsi_ageScaled_no_oldC) #looks ok
gvlma(mod_int_age_noTsi_ageScaled_no_oldC) #checks ok
Anova(mod_int_age_noTsi_ageScaled_no_oldC, type="III")
summary(mod_int_age_noTsi_ageScaled_no_oldC)
mod_int_age_noTsi_ageScaled_no_oldC=lm(CR~Age.s*C_count+Age2.s*C_count,data=data.sub,
subset=c(corpus!="Tsimane"&Age<40))
plot(mod_int_age_noTsi_ageScaled_no_oldC) #looks ok
subset=c(corpus!="Tsimane"&Age<40))
mod_int_age_noTsi_ageScaled_no_oldV=lm(CR~Age.s*V_count+Age2.s*V_count,data=data.sub,
subset=c(corpus!="Tsimane"&Age<40))
mod_int_age_noTsi_ageScaled_no_oldV=lm(CR~Age.s*V_count+Age2.s*V_count,data=data.sub,
subset=c(corpus!="Tsimane"&Age<40))
plot(mod_int_age_noTsi_ageScaled_no_oldV) #looks ok
#replot without kids over 40
data.sub_under40=subset(data.sub, Age<40 & corpus!="Warlaumont")
# plot data
#Consonants
ggplot(data.sub_under40, aes(x=Age, y=CR, color=C_count)) +
geom_point()+
# Add regression lines
# geom_smooth(method=lm)+
# Add loess lines
geom_smooth(span = 0.8)
ggplot(data.sub_under40, aes(x=Age, y=CR, color=V_count)) +
geom_point()+
# Add regression lines
# geom_smooth(method=lm)+
# Add loess lines
geom_smooth(span = 0.8)
