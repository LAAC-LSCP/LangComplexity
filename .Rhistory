ggplot(mydata_sub,aes(x=CR,fill=V_count))+      #Vowels
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_syl_comp)
#Histograms
hist(mydata_sub$CR,main="CR",xlab="CR") #quite normally distributed
#Plots
###Consonants - doesn't look impressive. The data quite unbalanced with average property leading
ggplot(mydata_sub,aes(x=CR,fill=Mad_C))+
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_C)
###Vowels #looks a bit better, but still average property is leading
ggplot(mydata_sub,aes(x=CR,fill=Mad_VQ))+
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_VQ)
ggplot(mydata_sub,aes(x = age, y = Mad_syl_comp)) +
geom_density_ridges_gradient(aes(fill = ..x..), scale = 3, size = 0.3) +
scale_fill_gradientn(colours = c("#0D0887FF", "#CC4678FF", "#F0F921FF"),name = "Age")+
labs(x = "Age (months)")+
labs(y = "Syllable Complexity")+
labs(title = 'Distributinon of data wrt. Syllable Complexity')
ggplot(mydata_sub, aes(x=age, y=CR, color=lang)) +
labs(colour = "Languages", shape="Languages") +
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
#More colorful diagrams :D
ggplot(mydata_sub,aes(x=CR,fill=C_count))+      #Consonants
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_syl_comp)
ggplot(mydata_sub,aes(x=CR,fill=V_count))+      #Vowels
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_syl_comp)
ggplot(mydata_sub,aes(x=CR,fill=Mad_C))+
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_C)+
labs(x = "Canonical Proportion")+
labs(y = "Consonants")+
labs(title = 'Distributinon of Consonants')
ggplot(mydata_sub,aes(x=CR,fill=Mad_C))+
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_C,name = "Consonants")+
labs(x = "Canonical Proportion")+
labs(y = "Consonants")+
labs(title = 'Distributinon of Consonants')
hist(mydata_sub$CR,main="CR",xlab="CR") #quite normally distributed
#Plots
###Consonants - doesn't look impressive. The data quite unbalanced with average property leading
ggplot(mydata_sub,aes(x=CR,fill=Mad_C))+
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_C)+
labs(x = "Canonical Proportion")+
labs(y = "Consonants")+
labs(title = 'Distributinon of Consonants')
###Vowels
ggplot(mydata_sub,aes(x=CR,fill=Mad_VQ))+
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_VQ)+
labs(x = "Canonical Proportion")+
labs(y = "Vowels")+
labs(title = 'Distributinon of Vowels')
ggplot(mydata_sub,aes(x = age, y = Mad_syl_comp)) +
geom_density_ridges_gradient(aes(fill = ..x..), scale = 3, size = 0.3) +
scale_fill_gradientn(colours = c("#0D0887FF", "#CC4678FF", "#F0F921FF"),name = "Age")+
labs(x = "Age (months)")+
labs(y = "Syllable Complexity")+
labs(title = 'Distributinon of data wrt. Syllable Complexity')
ggplot(mydata_sub, aes(x=age, y=CR, color=lang)) +
labs(colour = "Languages", shape="Languages") +
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
#More colorful diagrams :D
ggplot(mydata_sub,aes(x=CR,fill=C_count))+      #Consonants
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_syl_comp)
ggplot(mydata_sub,aes(x=CR,fill=V_count))+      #Vowels
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_syl_comp)
ggplot(mydata_sub,aes(x = CR, y = Mad_C)) +
geom_density_ridges_gradient(aes(fill = ..x..), scale = 3, size = 0.3) +
scale_fill_gradientn(colours = c("#0D0887FF", "#CC4678FF", "#F0F921FF"),name = "Age")+
labs(x = "Canonical Proportion")+
labs(y = "Consonants")+
labs(title = 'Distributinon of Consonants')
#Histograms
hist(mydata_sub$CR,main="CR",xlab="CR") #quite normally distributed
#Plots
###Consonants - doesn't look impressive. The data quite unbalanced with average property leading
ggplot(mydata_sub,aes(x=CR,fill=Mad_C))+
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_C)+
labs(x = "Canonical Proportion")+
labs(y = "Consonants")+
labs(title = 'Distributinon of Consonants')
###Vowels
ggplot(mydata_sub,aes(x=CR,fill=Mad_VQ))+
geom_histogram(bins=20,color="black") +
facet_grid(.~Mad_VQ)+
labs(x = "Canonical Proportion")+
labs(y = "Vowels")+
labs(title = 'Distributinon of Vowels')
ggplot(mydata_sub,aes(x = age, y = Mad_syl_comp)) +
geom_density_ridges_gradient(aes(fill = ..x..), scale = 3, size = 0.3) +
scale_fill_gradientn(colours = c("#0D0887FF", "#CC4678FF", "#F0F921FF"),name = "Age")+
labs(x = "Age (months)")+
labs(y = "Syllable Complexity")+
labs(title = 'Distributinon of Syllable Complexity')
ggplot(mydata_sub,aes(x = CR, y = Mad_C)) +
geom_density_ridges_gradient(aes(fill = ..x..), scale = 3, size = 0.3) +
scale_fill_gradientn(colours = c("#0D0887FF", "#CC4678FF", "#F0F921FF"),name = "Age")+
labs(x = "Canonical Proportion")+
labs(y = "Consonants")+
labs(title = 'Distributinon of Consonants')
ggplot(mydata_sub,aes(x = CR, y = Mad_VQ)) +
geom_density_ridges_gradient(aes(fill = ..x..), scale = 3, size = 0.3) +
scale_fill_gradientn(colours = c("#0D0887FF", "#CC4678FF", "#F0F921FF"),name = "Age")+
labs(x = "Canonical Proportion")+
labs(y = "Vowels")+
labs(title = 'Distributinon of Vowels')
ggplot(mydata_sub, aes(x=age, y=CR, color=lang)) +
labs(colour = "Languages", shape="Languages") +
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
ggplot(mydata_sub,aes(x = age, y = Mad_syl_comp)) +
geom_density_ridges_gradient(aes(fill = CR), scale = 3, size = 0.3) +
scale_fill_gradientn(colours = c("#0D0887FF", "#CC4678FF", "#F0F921FF"),name = "Age")+
labs(x = "Age (months)")+
labs(y = "Syllable Complexity")+
labs(title = 'Distributinon of Syllable Complexity')
ggplot(mydata_sub,aes(x = age, y = Mad_syl_comp)) +
geom_density_ridges_gradient(aes(fill = CR), scale = 20, size = 0.3) +
scale_fill_gradientn(colours = c("#0D0887FF", "#CC4678FF", "#F0F921FF"),name = "Age")+
labs(x = "Age (months)")+
labs(y = "Syllable Complexity")+
labs(title = 'Distributinon of Syllable Complexity')
ggplot(mydata_sub,aes(x = age, y = Mad_syl_comp)) +
geom_density_ridges_gradient(aes(fill = CR), scale = 3, size = 0.3) +
scale_fill_gradientn(colours = CR)+
labs(x = "Age (months)")+
labs(y = "Syllable Complexity")+
labs(title = 'Distributinon of Syllable Complexity')
ggplot(mydata_sub, aes(x = age, y = CR)) +
geom_bar(
aes(color = Mad_syl_comp, fill = Mad_syl_comp),
stat = "identity", position = position_stack()
) +
scale_color_manual(values = c("#0073C2FF", "#EFC000FF"))+
scale_fill_manual(values = c("#0073C2FF", "#EFC000FF"))
# Stacked bar plots of y = counts by x = cut,
# colored by the variable color
ggplot(mydata_sub, aes(x = age, y = CR)) +
geom_bar(aes(color = Mad_syl_comp, fill = Mad_syl_comp),stat = "identity", position = position_stack())+
scale_color_manual(values = c("#0D0887FF", "#CC4678FF", "#F0F921FF"))+
scale_fill_manual(values = c("#0D0887FF", "#CC4678FF", "#F0F921FF"))
# Use position = position_dodge()
# Stacked bar plots of y = counts by x = cut,
# colored by the variable color
ggplot(mydata_sub, aes(x = CR, y = age)) +
geom_bar(aes(color = Mad_syl_comp, fill = Mad_syl_comp),stat = "identity", position = position_stack())+
scale_color_manual(values = c("#0D0887FF", "#CC4678FF", "#F0F921FF"))+
scale_fill_manual(values = c("#0D0887FF", "#CC4678FF", "#F0F921FF"))
# Stacked bar plots of y = counts by x = cut,
# colored by the variable color
ggplot(mydata_sub, aes(x = CR, y = age)) +
geom_bar(aes(color = Mad_syl_comp, fill = Mad_syl_comp),stat = "identity", position = position_stack())+
scale_color_manual(values = c("#0D0887FF", "#CC4678FF", "#F0F921FF"))+
scale_fill_manual(values = c("#0D0887FF", "#CC4678FF", "#F0F921FF"))
# Stacked bar plots of y = counts by x = cut,
# colored by the variable color
ggplot(mydata_sub, aes(x = CR, y = age)) +
geom_bar(aes(color = Mad_C, fill = Mad_C),stat = "identity", position = position_stack())+
scale_color_manual(values = c("#0D0887FF", "#CC4678FF", "#F0F921FF"))+
scale_fill_manual(values = c("#0D0887FF", "#CC4678FF", "#F0F921FF"))
# Stacked bar plots of y = counts by x = cut,
# colored by the variable color
ggplot(mydata_sub, aes(x=age, y=CR)) +
geom_bar(aes(color = Mad_C, fill = Mad_C),stat = "identity", position = position_stack())+
scale_color_manual(values = c("#0D0887FF", "#CC4678FF", "#F0F921FF"))+
scale_fill_manual(values = c("#0D0887FF", "#CC4678FF", "#F0F921FF"))
e2 <- mydata_sub$CR~mydata_sub$Mad_C + geom_boxplot(
aes(fill = Mad_C),
position = position_dodge(0.9)
) +
scale_fill_manual(values = c("#999999", "#E69F00"))
e2
mydata_sub$CR~mydata_sub$Mad_C + geom_boxplot(
aes(fill = Mad_C),
position = position_dodge(0.9)
) +
scale_fill_manual(values = c("#999999", "#E69F00"))
e <- ggplot(mydata_sub, aes(x = Mad_C, y = CR))
e2 <- e + geom_boxplot(
aes(fill = Mad_V),
position = position_dodge(0.9)
) +
scale_fill_manual(values = c("#999999", "#E69F00"))
e2
e <- ggplot(mydata_sub, aes(x = Mad_C, y = CR))
e2 <- e + geom_boxplot(
aes(fill = mydata_sub$Mad_V),
position = position_dodge(0.9)
) +
scale_fill_manual(values = c("#999999", "#E69F00"))
e2
e <- ggplot(mydata_sub, aes(x = mydata_sub$Mad_C, y = CR))
e2 <- e + geom_boxplot(
aes(fill = mydata_sub$Mad_V),
position = position_dodge(0.9)
) +
scale_fill_manual(values = c("#999999", "#E69F00"))
e2
e <- ggplot(mydata_sub$CR~mydata_sub$Mad_C, aes(x = Mad_C, y = CR))
boxplot(mydata_sub$CR~mydata_sub$Mad_C, main="Distribution of CP by Consonants", xlab="Consonants", ylab="CP")
ggplot(mydata_sub$CR~mydata_sub$Mad_C, aes(Mad_C, CR)) +
geom_sina(aes(color = Mad_C), size = 0.7)+
scale_color_manual(values =  c("#00AFBB", "#E7B800", "#FC4E07"))
ggplot(mydata_sub, aes(Mad_C, CR)) +
geom_sina(aes(color = Mad_C), size = 0.7)+
scale_color_manual(values =  c("#00AFBB", "#E7B800", "#FC4E07"))
gplot(data = mydata_sub, mapping = aes(x=age, y=CR)) +
geom_point(mapping = aes(color = lang)) +
geom_smooth(data = filter(mydata_sub, class == "subcompact"), se = FALSE)
ggplot(data = mydata_sub, mapping = aes(x=age, y=CR)) +
geom_point(mapping = aes(color = lang)) +
geom_smooth(data = filter(mydata_sub, class == "subcompact"), se = FALSE)
ggplot(data = mydata_sub, mapping = aes(x=age, y=CR)) +
geom_point(mapping = aes(color = lang)) +
geom_smooth()
ggplot(mydata_sub, aes(x=age, y=CR, color=lang)) +
labs(colour = "Languages", shape="Languages") +
labs(x = "Age (months)")+
labs(y = "CP")+
geom_point()+
# Add regression lines
geom_smooth(method=lm,se=FALSE)
ggplot(data = mydata_sub, mapping = aes(x=age, y=CR)) +
geom_point(mapping = aes(color = lang)) +
geom_smooth()
ggplot(data = mydata_sub$CR) +
geom_bar(mapping = aes(x = CR, fill = CR))
hist(mydata_sub$CR,main="CR",xlab="CR") #quite normally distributed
ggplot(data = mydata_sub) +
geom_bar(mapping = aes(x = CR, fill = CR))
ggplot(mydata_sub, aes(x = Mad_C,y = CP)) +
geom_boxplot(notch = TRUE,
fill = "cornflowerblue",
alpha = .7) +
labs(title = "Salary distribution by rank")
ggplot(mydata_sub, aes(x = Mad_C,y = CR)) +
geom_boxplot(notch = TRUE,
fill = "cornflowerblue",
alpha = .7) +
labs(title = "Salary distribution by rank")
boxplot(mydata_sub$CR~mydata_sub$Mad_C, main="Distribution of CP by Consonants", xlab="Consonants", ylab="CP")
ggplot(mydata_sub, aes(x = Mad_C,y = CR)) +
geom_boxplot(notch = TRUE,
fill = "cornflowerblue",
alpha = .7) +
labs(title = "Salary distribution by rank")
boxplot(mydata_sub$CR~mydata_sub$Mad_V, main="Distribution of CP by Vowels", xlab="Vowels", ylab="CP")
ggplot(mydata_sub, aes(x = Mad_C,y = CR)) +
geom_boxplot(notch = TRUE,
fill = "cornflowerblue",
alpha = .7) +
labs(title = "Salary distribution by rank")
boxplot(mydata_sub$CR~mydata_sub$Mad_C, main="Distribution of CP by Consonants", xlab="Consonants", ylab="CP")
ggplot(mydata_sub, aes(x = Mad_C,y = CR)) +
geom_boxplot(notch = TRUE,
fill = "cornflowerblue",
alpha = .7) +
labs(title = "Distribution of CP by Consonants")
library(scales)
ggplot(mydata_sub,
aes(x = factor(Mad_C,y = CR,color = Mad_C)) +
geom_boxplot(size=1,
outlier.shape = 1,
outlier.color = "black",
outlier.size  = 3) +
geom_jitter(alpha = 0.5,
width=.2) +
scale_y_continuous(label = dollar) +
labs(title = "Academic Salary by Rank",
subtitle = "9-month salary for 2008-2009",
x = "",
y = "") +
theme_minimal() +
theme(legend.position = "none") +
coord_flip())
boxplot(mydata_sub$CR~mydata_sub$Mad_C, main="Distribution of CP by Consonants", xlab="Consonants", ylab="CP")
library(scales)
ggplot(mydata_sub,
aes(x = factor(C_count,
labels = c("Moderately Small",
"Average",
"Large")),
y = CR,
color = C_count)) +
geom_boxplot(size=1,
outlier.shape = 1,
outlier.color = "black",
outlier.size  = 3) +
geom_jitter(alpha = 0.5,
width=.2) +
scale_y_continuous(label = dollar) +
labs(title = "Academic Salary by Rank",
subtitle = "9-month salary for 2008-2009",
x = "",
y = "") +
theme_minimal() +
theme(legend.position = "none") +
coord_flip()
library(scales)
ggplot(mydata_sub,
aes(x = factor(C_count,
labels = c("Consonants")),
y = CR,
color = C_count)) +
geom_boxplot(size=1,
outlier.shape = 1,
outlier.color = "black",
outlier.size  = 3) +
geom_jitter(alpha = 0.5,
width=.2) +
scale_y_continuous(label = dollar) +
labs(title = "Academic Salary by Rank",
subtitle = "9-month salary for 2008-2009",
x = "",
y = "") +
theme_minimal() +
theme(legend.position = "none") +
coord_flip()
library(ggpol)
install.packages("ggpol")
library(ggpol)
library(scales)
ggplot(mydata_sub, aes(x = factor(Mad_C,
labels = c("Assistant\nProfessor",
"Associate\nProfessor",
"Full\nProfessor")),
y = CR,
fill=Mad_C)) +
geom_boxjitter(color="black",
jitter.color = "darkgrey",
errorbar.draw = TRUE) +
scale_y_continuous(label = dollar) +
labs(title = "Academic Salary by Rank",
subtitle = "9-month salary for 2008-2009",
x = "",
y = "") +
theme_minimal() +
theme(legend.position = "none")
"Average CR"; mean(mydata_sub$CR) ; "Standard Deviation" ; sd(mydata_sub$CR)
#Consonants
"Average CR for Consonants: Moderately Small"; mean(mydata_sub$CR[mydata_sub$Mad_C == "Moderately Small"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_C == "Moderately Small"])
"Average CR for Consonants: Average"; mean(mydata_sub$CR[mydata_sub$Mad_C == "Average"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_C == "Average"])
boxplot(mydata_sub$CR~mydata_sub$Mad_C, main="Distribution of CP by Consonants", xlab="Consonants", ylab="CP")
library(ggpol)
library(scales)
ggplot(mydata_sub, aes(x = factor(Mad_C,
labels = c("Moderately Small","Average","Large")),y = CR, fill=Mad_C)) +
geom_boxjitter(color="black", jitter.color = "darkgrey", errorbar.draw = TRUE) +
scale_y_continuous(label = dollar) +
labs(title = "Distribution of CP by Consonants",
x = "",
y = "") +
theme_minimal() +
theme(legend.position = "none")
#Vowels
"Average CR for Vowels: Average"; mean(mydata_sub$CR[mydata_sub$Mad_V == "Average"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_V == "Average"])
"Average CR for Consonants: Large"; mean(mydata_sub$CR[mydata_sub$Mad_V == "Large"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_V == "Large"])
boxplot(mydata_sub$CR~mydata_sub$Mad_V, main="Distribution of CP by Vowels", xlab="Vowels", ylab="CP")
"Average CR"; mean(mydata_sub$CR) ; "Standard Deviation" ; sd(mydata_sub$CR)
#Consonants
"Average CR for Consonants: Moderately Small"; mean(mydata_sub$CR[mydata_sub$Mad_C == "Moderately Small"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_C == "Moderately Small"])
"Average CR for Consonants: Average"; mean(mydata_sub$CR[mydata_sub$Mad_C == "Average"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_C == "Average"])
boxplot(mydata_sub$CR~mydata_sub$Mad_C, main="Distribution of CP by Consonants", xlab="Consonants", ylab="CP")
library(ggpol)
library(scales)
ggplot(mydata_sub, aes(x = factor(Mad_C,
labels = c("Moderately Small","Average","Large")),y = CR, fill=Mad_C)) +
geom_boxjitter(color="black", jitter.color = "darkgrey", errorbar.draw = TRUE) +
scale_y_continuous() +
labs(title = "Distribution of CP by Consonants",
x = "",
y = "") +
theme_minimal() +
theme(legend.position = "none")
#Vowels
"Average CR for Vowels: Average"; mean(mydata_sub$CR[mydata_sub$Mad_V == "Average"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_V == "Average"])
"Average CR for Consonants: Large"; mean(mydata_sub$CR[mydata_sub$Mad_V == "Large"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_V == "Large"])
boxplot(mydata_sub$CR~mydata_sub$Mad_V, main="Distribution of CP by Vowels", xlab="Vowels", ylab="CP")
#Vowels
"Average CR for Vowels: Average"; mean(mydata_sub$CR[mydata_sub$Mad_VQ == "Average"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_V == "Average"])
"Average CR"; mean(mydata_sub$CR) ; "Standard Deviation" ; sd(mydata_sub$CR)
#Consonants
"Average CR for Consonants: Moderately Small"; mean(mydata_sub$CR[mydata_sub$Mad_C == "Moderately Small"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_C == "Moderately Small"])
"Average CR for Consonants: Average"; mean(mydata_sub$CR[mydata_sub$Mad_C == "Average"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_C == "Average"])
boxplot(mydata_sub$CR~mydata_sub$Mad_C, main="Distribution of CP by Consonants", xlab="Consonants", ylab="CP")
library(ggpol)
library(scales)
ggplot(mydata_sub, aes(x = factor(Mad_C,
labels = c("Moderately Small","Average","Large")),y = CR, fill=Mad_C)) +
geom_boxjitter(color="black", jitter.color = "darkgrey", errorbar.draw = TRUE) +
scale_y_continuous() +
labs(title = "Distribution of CP by Consonants",
x = "",
y = "") +
theme_minimal() +
theme(legend.position = "none")
#Vowels
"Average CR for Vowels: Average"; mean(mydata_sub$CR[mydata_sub$Mad_VQ == "Average"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_VQ == "Average"])
"Average CR for Consonants: Large"; mean(mydata_sub$CR[mydata_sub$Mad_VQ == "Large"]) ; "Standard Deviation" ; sd(mydata_sub$CR[mydata_sub$Mad_VQ == "Large"])
boxplot(mydata_sub$CR~mydata_sub$Mad_VQ, main="Distribution of CP by Vowels", xlab="Vowels", ylab="CP")
ggplot(mydata_sub, aes(x = factor(Mad_VQ,
labels = c("Average","Large")),y = CR, fill=Mad_VQ)) +
geom_boxjitter(color="black", jitter.color = "darkgrey", errorbar.draw = TRUE) +
scale_y_continuous() +
labs(title = "Distribution of CP by Vowels",
x = "",
y = "") +
theme_minimal() +
theme(legend.position = "none")
View(mydata_sub)
ggplot(mydata_sub,aes(x = CR, y = Mad_C)) +
geom_density_ridges_gradient(aes(fill = ..x..), scale = 3, size = 0.3) +
scale_fill_gradientn(colours = c("#0D0887FF", "#CC4678FF", "#F0F921FF"),name = "Age")+
labs(x = "Canonical Proportion")+
labs(y = "Consonants")+
labs(title = 'Distributinon of Consonants')
mydata_sub_S <- subset(mydata_sub,  Mad_C=="Moderately Small")
mydata_sub_A <- subset(mydata_sub,  Mad_C=="Average")
mydata_sub_L <- subset(mydata_sub,  Mad_C=="Moderately large")
"Moderately Small Mad_C"; cor.test(mydata_sub_S$age,mydata_sub_S$CR) #0.8752329
"Average Mad_C"; cor.test(mydata_sub_A$age,mydata_sub_A$CR) #0.4389019
"Moderately large Mad_C"; cor.test(mydata_sub_L$age,mydata_sub_L$CR) #0.2391876   Pretty low
View(other_data)
"Moderately Small Mad_C"; cor.test(mydata_sub_S$age,mydata_sub_S$CR) #0.8752329
"Average Mad_C"; cor.test(mydata_sub_A$age,mydata_sub_A$CR) #0.4389019
"Moderately large Mad_C"; cor.test(mydata_sub_L$age,mydata_sub_L$CR) #0.2391876   Pretty low
lm_Small <- lm(mydata_sub_S$CR~mydata_sub_S$age)
par(mfrow=c(2,2))
plot(lm_Small, main="Moderately Small Mad_C")
#check assumptions
#Moderately Small Mad_C
lm_Small <- lm(mydata_sub_S$CR~mydata_sub_S$age)
par(mfrow=c(2,2))
plot(lm_Small, main="Moderately Small Mad_C")
#Average Mad_C
lm_Avg <- lm(mydata_sub_A$CR~mydata_sub_A$age)
par(mfrow=c(2,2))
plot(lm_Avg, main="Average Mad_C")
#Moderately large Mad_C
lm_large <- lm(mydata_sub_L$CR~mydata_sub_L$age)
#Small vs. Average
SvA <- subset(mydata_sub,  Mad_C!="Large")
lm_SvA <- (lm(SvA$CR~SvA$age))
par(mfrow=c(2,2))
plot(lm_SvA, main="Small vs. Average")
"Small vs. Average"; anova(lm(SvA$CR~SvA$age*SvA$Mad_C))
AvL <- subset(mydata_sub,  Mad_C!="Moderately Small")
lm_AvL <- (lm(AvL$CR~AvL$age))
par(mfrow=c(2,2))
plot(lm_AvL, main="Average vs. Large")
"Average vs. Large"; anova(lm(AvL$CR~AvL$age*AvL$Mad_C))
#Small vs. Large
SvL <- subset(mydata_sub,  Mad_C!="Average")
lm_SvL <- (lm(SvL$CR~SvL$age))
par(mfrow=c(2,2))
plot(lm_SvL, main="Small vs. Large")#looks quite bad
"Small vs. Large"; anova(lm(SvL$CR~SvL$age*SvL$Mad_C))
#Pearson's correlations for each Mad_V level
mydata_sub_Av <- subset(mydata_sub,  Mad_VQ=="Average")
mydata_sub_Lr <- subset(mydata_sub,  Mad_VQ=="Large")
"Average Mad_VQ"; cor.test(mydata_sub_Av$age,mydata_sub_Av$CR)  #0.6233493
"Large Mad_VQ"; cor.test(mydata_sub_Lr$age,mydata_sub_Lr$CR)  #0.6149568
#check assumptions
#Average Mad_VQ
lm_Average <- lm(mydata_sub_Av$CR~mydata_sub_Av$age)
par(mfrow=c(2,2))
plot(lm_Average, main="Average Mad_VQ")
#Large Mad_VQ
lm_lrg <- lm(mydata_sub_Lr$CR~mydata_sub_Lr$age) #
par(mfrow=c(2,2))
plot(lm_lrg, main="Large Mad_VQ")#looks quite bad
#Average vs. Large
AvvLr <- subset(mydata_sub)
lm_AvvLr <- (lm(AvvLr$CR~AvvLr$age))
par(mfrow=c(2,2))
plot(lm_AvvLr, main="Average vs. Large")
"Average vs. Large"; anova(lm(AvvLr$CR~AvvLr$age*AvvLr$Mad_VQ))
attach(mydata_sub)
lm_data <- lm(CR ~ age + Mad_C + Mad_VQ, data = mydata_sub)
summary(lm_data)
summary(lm(age ~ CR +  Mad_syl_comp + Mad_VQ + Mad_C))
#kable
#___________
attach(mydata_sub)
lm_data <- lm(CR ~ age + Mad_C + Mad_VQ, data = mydata_sub)
summary(lm_data)
summary(lm(age ~ CR +  Mad_syl_comp + Mad_VQ + Mad_C))
#kable
lm_data <- lm(CR ~ age + Mad_C + Mad_VQ, data = mydata_sub)
summary(lm_data)
summary(lm(age ~ CR +  Mad_VQ + Mad_C))
#kable
